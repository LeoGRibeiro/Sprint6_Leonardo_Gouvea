<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on win32)" generated="20220706 17:19:02.883" rpa="false" schemaversion="3">
<suite id="s1" name="Usuarios Tests" source="D:\Coisas\Estudos\Compass\Robot_framework\tests\usuarios_tests.robot">
<kw name="Criar Sessao" library="common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220706 17:19:03.203" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220706 17:19:03.203" endtime="20220706 17:19:03.204"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.203" endtime="20220706 17:19:03.204"/>
</kw>
<test id="s1-t1" name="Cenário: GET Todos os Usuarios 200" line="12">
<kw name="GET Endpoint /usuarios" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.211" level="INFO">GET Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.211" level="INFO">GET Response : url=http://localhost:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '06bf9ad6-c288-45df-9560-4533d9e01a1f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '12055', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 57,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Garrett Hoffman",
            "email": "heathernavarro@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "1YrNUFg67NujFkVr"
        },
        {
            "nome": "Bryan Aguilar",
            "email": "conleylori@example.org",
            "password": "&amp;9UPr",
            "administrador": "false",
            "_id": "1huYkTw4pgrTDcTJ"
        },
        {
            "nome": "Patricia Soto",
            "email": "vleon@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "34eyYGCPDeNwRVDH"
        },
        {
            "nome": "Meghan Orr",
            "email": "nkirk@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "3MvOuzoe5HcVvtZx"
        },
        {
            "nome": "Edwin Whitney",
            "email": "dmorales@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "3hiiroduALppqme6"
        },
        {
            "nome": "Jared Davis",
            "email": "david14@example.com",
            "password": "$1Bnn",
            "administrador": "true",
            "_id": "3oMwhgFYVzS2Tnai"
        },
        {
            "nome": "Ashley Garcia",
            "email": "tsanchez@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "4yVtXcE9HAuM81XK"
        },
        {
            "nome": "Patrick Krause",
            "email": "hgreen@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "6Viv3szSTs2E414T"
        },
        {
            "nome": "Fred Silva",
            "email": "rmills@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "6uTlIEDTY4tPG2NY"
        },
        {
            "nome": "Lisa Washington",
            "email": "ryan46@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "9ac1FG3y6V0zAxJe"
        },
        {
            "nome": "Davi luis",
            "email": "daviluis3@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "C8AvqUuxdkRE4l7K"
        },
        {
            "nome": "Jacob Turner",
            "email": "linda22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Dfb0wpiOiYE3OFiE"
        },
        {
            "nome": "Mary Patton",
            "email": "william71@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "EbFcSTgftrJy1uba"
        },
        {
            "nome": "William Stokes",
            "email": "smithkara@example.org",
            "password": "&amp;0WmY",
            "administrador": "true",
            "_id": "FrJGBoSo7Wn0Lpdu"
        },
        {
            "nome": "James Hernandez",
            "email": "jonesbrenda@example.com",
            "password": "(3Ibm",
            "administrador": "true",
            "_id": "GwfZ75MYS8RuIoNe"
        },
        {
            "nome": "Kelly Walker",
            "email": "gordondennis@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "IZwqoy15uk1nRURw"
        },
        {
            "nome": "Deborah Smith",
            "email": "wsimpson@example.net",
            "password": "+84St",
            "administrador": "true",
            "_id": "JAIfQc9Y7jdd1VOj"
        },
        {
            "nome": "Neymaru",
            "email": "fulano@qa.com.br",
            "password": "+2Ce8",
            "administrador": "true",
            "_id": "JJAwZmD0BGmmOavI"
        },
        {
            "nome": "Cazé",
            "email": "timothy39@example.net",
            "password": "+1AiH",
            "administrador": "true",
            "_id": "LBNTveEpMboFxKLp"
        },
        {
            "nome": "Sophia",
            "email": "Sophia_@qa.com",
            "password": "teste",
            "administrador": "false",
            "_id": "MypbABXqyjIiWamv"
        },
        {
            "nome": "William Carey",
            "email": "smithlisa@example.com",
            "password": "d^4Xm",
            "administrador": "true",
            "_id": "OdJ5yswAKeDh0RvI"
        },
        {
            "nome": "Bryan Larson",
            "email": "agilbert@example.org",
            "password": "$F3Tz",
            "administrador": "true",
            "_id": "PPw4iR5jZnVlE8UD"
        },
        {
            "nome": "Randall Meza",
            "email": "wwilliams@example.com",
            "password": "teste",
            "administrador": "false",
            "_id": "Qib9oETBywJ1LWNS"
        },
        {
            "nome": "Cody Adams",
            "email": "tbaker@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "RPUBl1zNkQBwYilz"
        },
        {
            "nome": "Brett Lewis",
            "email": "hamptondarryl@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "RfCSZupicTZLyPHv"
        },
        {
            "nome": "Jennifer Williams",
            "email": "probinson@example.org",
            "password": "*3Yfl",
            "administrador": "true",
            "_id": "TI7ypbgonQUp5Ki9"
        },
        {
            "nome": "John Gregory",
            "email": "zsmith@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "TqmKjbcOPAxIk2TX"
        },
        {
            "nome": "Nicholas Singleton",
            "email": "gilmorelisa@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Tz7VCr34EdGeTrMl"
        },
        {
            "nome": "Ryan Nelson",
            "email": "armstrongrita@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "ViliyyDZ5Wb5DUqI"
        },
        {
            "nome": "Charles Miles",
            "email": "julie74@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "YQaC6QQN3u5EkHiJ"
        },
        {
            "nome": "Wendy Ponce",
            "email": "xelliott@example.com",
            "password": "!F6Dm",
            "administrador": "true",
            "_id": "Z3ONAABtVcA6CUKX"
        },
        {
            "nome": "Ronaldinho Gaucho",
            "email": "ronaldinh9@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "ZBvcyIXYSEKQq9f9"
        },
        {
            "nome": "Jesus Butler",
            "email": "roysmith@example.com",
            "password": ")5B9u",
            "administrador": "true",
            "_id": "aI3a0u0wTf9S82Rt"
        },
        {
            "nome": "Danielle Frank",
            "email": "bryan90@example.org",
            "password": "%9Ija",
            "administrador": "true",
            "_id": "cH9igOkRlSKajqik"
        },
        {
            "nome": "Miss Michelle Villarreal",
            "email": "margaretkelly@example.com",
            "password": "N*0Ae",
            "administrador": "true",
            "_id": "d15FCfFp3a6ssvFn"
        },
        {
            "nome": "Joseph Ryan",
            "email": "roger38@example.org",
            "password": "$3NlS",
            "administrador": "true",
            "_id": "dKX9A9YWjknh6GBX"
        },
        {
            "nome": "Brittany Lara",
            "email": "stevensstephanie@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "fLnW3WziOY4hT6y4"
        },
        {
            "nome": "Kristen Holder",
            "email": "jlee@example.com",
            "password": "#5JoO",
            "administrador": "true",
            "_id": "hDSbtXkhlLtTcEgF"
        },
        {
            "nome": "James Davis",
            "email": "sdaniel@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "hUz4jiSuQYWUy1GS"
        },
        {
            "nome": "Robert Collins",
            "email": "walshryan@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "lvfhDVcRgVBVBEfz"
        },
        {
            "nome": "Richard Gomes",
            "email": "richard_@qa.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "m42DKtadITK7v6Kb"
        },
        {
            "nome": "Sophia Light",
            "email": "Sophia123@qa.com.br",
            "password": "(e1Ww",
            "administrador": "false",
            "_id": "mIHZzFvClk19pLM7"
        },
        {
            "nome": "Chris Aguirre",
            "email": "joycehill@example.com",
            "password": "teste",
            "administrador": "false",
            "_id": "nefiiMwOLD3kT24D"
        },
        {
            "nome": "Kenneth Smith",
            "email": "toddjones@example.com",
            "password": "+0Pll",
            "administrador": "true",
            "_id": "oCwRwCVrDfLFbt7M"
        },
        {
            "nome": "Amy Rivera",
            "email": "james22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "qWR0ri4oJCzJeTCo"
        },
        {
            "nome": "Frank Castillo",
            "email": "jenniferacosta@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "qylyHe0C2NcnPESA"
        },
        {
            "nome": "Rulque Grand... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220706 17:19:03.211" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.204" endtime="20220706 17:19:03.211"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.212" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.212" endtime="20220706 17:19:03.212"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.212" endtime="20220706 17:19:03.214"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Quantidade: ${response.json()["quantidade"]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.214" endtime="20220706 17:19:03.215"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.204" endtime="20220706 17:19:03.215"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.216" endtime="20220706 17:19:03.216"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.216" endtime="20220706 17:19:03.216"/>
</kw>
<tag>GET</tag>
<tag>GET_usuarios</tag>
<status status="PASS" starttime="20220706 17:19:03.204" endtime="20220706 17:19:03.217"/>
</test>
<test id="s1-t2" name="Cenário: GET Usuarios Por ID 200" line="17">
<kw name="Coletar ID Usuario Aleatorio" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.225" level="INFO">GET Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.225" level="INFO">GET Response : url=http://localhost:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e091c20f-d600-4929-af30-048ec919c59a', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '12055', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 57,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Garrett Hoffman",
            "email": "heathernavarro@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "1YrNUFg67NujFkVr"
        },
        {
            "nome": "Bryan Aguilar",
            "email": "conleylori@example.org",
            "password": "&amp;9UPr",
            "administrador": "false",
            "_id": "1huYkTw4pgrTDcTJ"
        },
        {
            "nome": "Patricia Soto",
            "email": "vleon@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "34eyYGCPDeNwRVDH"
        },
        {
            "nome": "Meghan Orr",
            "email": "nkirk@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "3MvOuzoe5HcVvtZx"
        },
        {
            "nome": "Edwin Whitney",
            "email": "dmorales@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "3hiiroduALppqme6"
        },
        {
            "nome": "Jared Davis",
            "email": "david14@example.com",
            "password": "$1Bnn",
            "administrador": "true",
            "_id": "3oMwhgFYVzS2Tnai"
        },
        {
            "nome": "Ashley Garcia",
            "email": "tsanchez@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "4yVtXcE9HAuM81XK"
        },
        {
            "nome": "Patrick Krause",
            "email": "hgreen@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "6Viv3szSTs2E414T"
        },
        {
            "nome": "Fred Silva",
            "email": "rmills@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "6uTlIEDTY4tPG2NY"
        },
        {
            "nome": "Lisa Washington",
            "email": "ryan46@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "9ac1FG3y6V0zAxJe"
        },
        {
            "nome": "Davi luis",
            "email": "daviluis3@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "C8AvqUuxdkRE4l7K"
        },
        {
            "nome": "Jacob Turner",
            "email": "linda22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Dfb0wpiOiYE3OFiE"
        },
        {
            "nome": "Mary Patton",
            "email": "william71@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "EbFcSTgftrJy1uba"
        },
        {
            "nome": "William Stokes",
            "email": "smithkara@example.org",
            "password": "&amp;0WmY",
            "administrador": "true",
            "_id": "FrJGBoSo7Wn0Lpdu"
        },
        {
            "nome": "James Hernandez",
            "email": "jonesbrenda@example.com",
            "password": "(3Ibm",
            "administrador": "true",
            "_id": "GwfZ75MYS8RuIoNe"
        },
        {
            "nome": "Kelly Walker",
            "email": "gordondennis@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "IZwqoy15uk1nRURw"
        },
        {
            "nome": "Deborah Smith",
            "email": "wsimpson@example.net",
            "password": "+84St",
            "administrador": "true",
            "_id": "JAIfQc9Y7jdd1VOj"
        },
        {
            "nome": "Neymaru",
            "email": "fulano@qa.com.br",
            "password": "+2Ce8",
            "administrador": "true",
            "_id": "JJAwZmD0BGmmOavI"
        },
        {
            "nome": "Cazé",
            "email": "timothy39@example.net",
            "password": "+1AiH",
            "administrador": "true",
            "_id": "LBNTveEpMboFxKLp"
        },
        {
            "nome": "Sophia",
            "email": "Sophia_@qa.com",
            "password": "teste",
            "administrador": "false",
            "_id": "MypbABXqyjIiWamv"
        },
        {
            "nome": "William Carey",
            "email": "smithlisa@example.com",
            "password": "d^4Xm",
            "administrador": "true",
            "_id": "OdJ5yswAKeDh0RvI"
        },
        {
            "nome": "Bryan Larson",
            "email": "agilbert@example.org",
            "password": "$F3Tz",
            "administrador": "true",
            "_id": "PPw4iR5jZnVlE8UD"
        },
        {
            "nome": "Randall Meza",
            "email": "wwilliams@example.com",
            "password": "teste",
            "administrador": "false",
            "_id": "Qib9oETBywJ1LWNS"
        },
        {
            "nome": "Cody Adams",
            "email": "tbaker@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "RPUBl1zNkQBwYilz"
        },
        {
            "nome": "Brett Lewis",
            "email": "hamptondarryl@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "RfCSZupicTZLyPHv"
        },
        {
            "nome": "Jennifer Williams",
            "email": "probinson@example.org",
            "password": "*3Yfl",
            "administrador": "true",
            "_id": "TI7ypbgonQUp5Ki9"
        },
        {
            "nome": "John Gregory",
            "email": "zsmith@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "TqmKjbcOPAxIk2TX"
        },
        {
            "nome": "Nicholas Singleton",
            "email": "gilmorelisa@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Tz7VCr34EdGeTrMl"
        },
        {
            "nome": "Ryan Nelson",
            "email": "armstrongrita@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "ViliyyDZ5Wb5DUqI"
        },
        {
            "nome": "Charles Miles",
            "email": "julie74@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "YQaC6QQN3u5EkHiJ"
        },
        {
            "nome": "Wendy Ponce",
            "email": "xelliott@example.com",
            "password": "!F6Dm",
            "administrador": "true",
            "_id": "Z3ONAABtVcA6CUKX"
        },
        {
            "nome": "Ronaldinho Gaucho",
            "email": "ronaldinh9@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "ZBvcyIXYSEKQq9f9"
        },
        {
            "nome": "Jesus Butler",
            "email": "roysmith@example.com",
            "password": ")5B9u",
            "administrador": "true",
            "_id": "aI3a0u0wTf9S82Rt"
        },
        {
            "nome": "Danielle Frank",
            "email": "bryan90@example.org",
            "password": "%9Ija",
            "administrador": "true",
            "_id": "cH9igOkRlSKajqik"
        },
        {
            "nome": "Miss Michelle Villarreal",
            "email": "margaretkelly@example.com",
            "password": "N*0Ae",
            "administrador": "true",
            "_id": "d15FCfFp3a6ssvFn"
        },
        {
            "nome": "Joseph Ryan",
            "email": "roger38@example.org",
            "password": "$3NlS",
            "administrador": "true",
            "_id": "dKX9A9YWjknh6GBX"
        },
        {
            "nome": "Brittany Lara",
            "email": "stevensstephanie@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "fLnW3WziOY4hT6y4"
        },
        {
            "nome": "Kristen Holder",
            "email": "jlee@example.com",
            "password": "#5JoO",
            "administrador": "true",
            "_id": "hDSbtXkhlLtTcEgF"
        },
        {
            "nome": "James Davis",
            "email": "sdaniel@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "hUz4jiSuQYWUy1GS"
        },
        {
            "nome": "Robert Collins",
            "email": "walshryan@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "lvfhDVcRgVBVBEfz"
        },
        {
            "nome": "Richard Gomes",
            "email": "richard_@qa.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "m42DKtadITK7v6Kb"
        },
        {
            "nome": "Sophia Light",
            "email": "Sophia123@qa.com.br",
            "password": "(e1Ww",
            "administrador": "false",
            "_id": "mIHZzFvClk19pLM7"
        },
        {
            "nome": "Chris Aguirre",
            "email": "joycehill@example.com",
            "password": "teste",
            "administrador": "false",
            "_id": "nefiiMwOLD3kT24D"
        },
        {
            "nome": "Kenneth Smith",
            "email": "toddjones@example.com",
            "password": "+0Pll",
            "administrador": "true",
            "_id": "oCwRwCVrDfLFbt7M"
        },
        {
            "nome": "Amy Rivera",
            "email": "james22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "qWR0ri4oJCzJeTCo"
        },
        {
            "nome": "Frank Castillo",
            "email": "jenniferacosta@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "qylyHe0C2NcnPESA"
        },
        {
            "nome": "Rulque Grand... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220706 17:19:03.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.217" endtime="20220706 17:19:03.226"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${numbers}</var>
<arg>random.sample(range(1, ${response.json()["quantidade"]}),1)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.226" level="INFO">${numbers} = [51]</msg>
<status status="PASS" starttime="20220706 17:19:03.226" endtime="20220706 17:19:03.226"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_usuario}</var>
<arg>${response.json()["usuarios"][${numbers}[0]]["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.227" level="INFO">${id_usuario} = wvC7ddjYWUch2neV</msg>
<status status="PASS" starttime="20220706 17:19:03.226" endtime="20220706 17:19:03.227"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.227" level="INFO">${id_usuario} = wvC7ddjYWUch2neV</msg>
<status status="PASS" starttime="20220706 17:19:03.227" endtime="20220706 17:19:03.227"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.227" endtime="20220706 17:19:03.227"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.217" endtime="20220706 17:19:03.227"/>
</kw>
<kw name="GET Endpoint /usuarios por ID" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.229" level="INFO">GET Request : url=http://localhost:3000/usuarios/wvC7ddjYWUch2neV 
 path_url=/usuarios/wvC7ddjYWUch2neV 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.229" level="INFO">GET Response : url=http://localhost:3000/usuarios/wvC7ddjYWUch2neV 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1d51727f-4184-4504-a166-e128b86eca3e', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '151', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "Matthew Grant",
    "email": "npage@example.net",
    "password": "j_6Nf",
    "administrador": "false",
    "_id": "wvC7ddjYWUch2neV"
} 
 </msg>
<msg timestamp="20220706 17:19:03.229" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.227" endtime="20220706 17:19:03.229"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.229" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.229" endtime="20220706 17:19:03.229"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.230" endtime="20220706 17:19:03.230"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.227" endtime="20220706 17:19:03.230"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.230" endtime="20220706 17:19:03.231"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.230" endtime="20220706 17:19:03.231"/>
</kw>
<tag>GET</tag>
<tag>GET_usuario_id</tag>
<status status="PASS" starttime="20220706 17:19:03.217" endtime="20220706 17:19:03.231"/>
</test>
<test id="s1-t3" name="Cenário: GET Não Encontrar ID 400" line="23">
<kw name="Definir ID Usuario &quot;nc2r23yn7crt&quot;&quot;" library="usuarios_keywords" sourcename="Definir ID Usuario &quot;${id_usuario}&quot;">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.232" level="INFO">${id_usuario} = nc2r23yn7crt"</msg>
<status status="PASS" starttime="20220706 17:19:03.232" endtime="20220706 17:19:03.232"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.232" endtime="20220706 17:19:03.232"/>
</kw>
<kw name="GET Endpoint /usuarios por ID" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.234" level="INFO">GET Request : url=http://localhost:3000/usuarios/nc2r23yn7crt%22 
 path_url=/usuarios/nc2r23yn7crt%22 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.234" level="INFO">GET Response : url=http://localhost:3000/usuarios/nc2r23yn7crt%22 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'cca83f64-f193-488a-882c-4a73946add9e', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '45', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Usuário não encontrado"
} 
 </msg>
<msg timestamp="20220706 17:19:03.234" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.232" endtime="20220706 17:19:03.234"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.234" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.234" endtime="20220706 17:19:03.234"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.234" endtime="20220706 17:19:03.235"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.232" endtime="20220706 17:19:03.235"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.235" endtime="20220706 17:19:03.235"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.235" endtime="20220706 17:19:03.235"/>
</kw>
<kw name="Validar Se &quot;message&quot; Contem &quot;Usuário não encontrado&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.236" endtime="20220706 17:19:03.236"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.236" endtime="20220706 17:19:03.236"/>
</kw>
<tag>GET</tag>
<tag>GET_usuario_id_invalido</tag>
<status status="PASS" starttime="20220706 17:19:03.231" endtime="20220706 17:19:03.236"/>
</test>
<test id="s1-t4" name="Cenário: POST Cadastrar Usuario Dinâmico 201" line="31">
<kw name="Criar Dados para Usuario Válido" library="dynamics">
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220706 17:19:03.237" level="INFO">${nome} = Eric Kim</msg>
<status status="PASS" starttime="20220706 17:19:03.237" endtime="20220706 17:19:03.237"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220706 17:19:03.237" level="INFO">${email} = rachel38@example.com</msg>
<status status="PASS" starttime="20220706 17:19:03.237" endtime="20220706 17:19:03.238"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<arg>length=5</arg>
<arg>special_chars=True</arg>
<arg>digits=True</arg>
<arg>upper_case=True</arg>
<arg>lower_case=True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220706 17:19:03.238" level="INFO">${senha} = )M4Qg</msg>
<status status="PASS" starttime="20220706 17:19:03.238" endtime="20220706 17:19:03.238"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 17:19:03.238" level="INFO">${payload} = {'nome': 'Eric Kim', 'email': 'rachel38@example.com', 'password': ')M4Qg', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.238" endtime="20220706 17:19:03.238"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.238" endtime="20220706 17:19:03.238"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.239" level="INFO">${payload} = {'nome': 'Eric Kim', 'email': 'rachel38@example.com', 'password': ')M4Qg', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.238" endtime="20220706 17:19:03.239"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.237" endtime="20220706 17:19:03.239"/>
</kw>
<kw name="POST Endpoint /usuarios" library="usuarios_keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>data=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.242" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '78', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Eric+Kim&amp;email=rachel38%40example.com&amp;password=%29M4Qg&amp;administrador=true 
 </msg>
<msg timestamp="20220706 17:19:03.242" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'fe4e0ff4-bc62-4581-b45e-141074d5d53f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "tLaabSgUPQu3PPNy"
} 
 </msg>
<msg timestamp="20220706 17:19:03.242" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.239" endtime="20220706 17:19:03.242"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.242" endtime="20220706 17:19:03.242"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.242" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.242" endtime="20220706 17:19:03.242"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.239" endtime="20220706 17:19:03.242"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.243" endtime="20220706 17:19:03.243"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.243" endtime="20220706 17:19:03.243"/>
</kw>
<kw name="Validar Se &quot;message&quot; Contem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.244" endtime="20220706 17:19:03.244"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.243" endtime="20220706 17:19:03.244"/>
</kw>
<kw name="Validar Alguma Resposta Vazia &quot;_id&quot;" library="common" sourcename="Validar Alguma Resposta Vazia &quot;${espaco}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()["${espaco}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220706 17:19:03.245" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220706 17:19:03.244" endtime="20220706 17:19:03.245"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.244" endtime="20220706 17:19:03.245"/>
</kw>
<tag>POST</tag>
<tag>POST_cadastrar_dinamico</tag>
<status status="PASS" starttime="20220706 17:19:03.237" endtime="20220706 17:19:03.245"/>
</test>
<test id="s1-t5" name="Cenário: POST Criar Usuário de De Massa Estatica 201" line="39">
<kw name="Pegar Dados Usuarios Estatico &quot;user_valido&quot;" library="usuarios_keywords" sourcename="Pegar Dados Usuarios Estatico &quot;${user}&quot;">
<kw name="Importar Json Estatico" library="common">
<var>${json}</var>
<arg>json_usuario.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/statics/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220706 17:19:03.246" level="INFO" html="true">Getting file '&lt;a href="file://D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json"&gt;D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json&lt;/a&gt;'.</msg>
<msg timestamp="20220706 17:19:03.247" level="INFO">${arquivo} = {
    "user_valido":{
        "nome": "Alberto Junior",
        "email": "betinho3@qa.com",
        "password": "teste123",
        "administrador": "true"
    },
    "user_invalido":{
        "nome":...</msg>
<status status="PASS" starttime="20220706 17:19:03.246" endtime="20220706 17:19:03.247"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.247" level="INFO">${data} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.247" endtime="20220706 17:19:03.247"/>
</kw>
<msg timestamp="20220706 17:19:03.247" level="INFO">${json} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.246" endtime="20220706 17:19:03.247"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${payload}</var>
<arg>${json["${user}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.247" level="INFO">${payload} = {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.247" endtime="20220706 17:19:03.247"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.248" endtime="20220706 17:19:03.248"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.248" level="INFO">${payload} = {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.248" endtime="20220706 17:19:03.248"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.246" endtime="20220706 17:19:03.248"/>
</kw>
<kw name="POST Endpoint /usuarios" library="usuarios_keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>data=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.250" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '80', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Alberto+Junior&amp;email=betinho3%40qa.com&amp;password=teste123&amp;administrador=true 
 </msg>
<msg timestamp="20220706 17:19:03.250" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8eb61895-653e-46cb-a978-4f6b31d362dc', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "hCGhQqDoo9Si3mDN"
} 
 </msg>
<msg timestamp="20220706 17:19:03.250" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.248" endtime="20220706 17:19:03.250"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.250" endtime="20220706 17:19:03.251"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.251" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.251" endtime="20220706 17:19:03.251"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.248" endtime="20220706 17:19:03.251"/>
</kw>
<kw name="Validar Alguma Resposta Vazia &quot;_id&quot;" library="common" sourcename="Validar Alguma Resposta Vazia &quot;${espaco}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()["${espaco}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220706 17:19:03.251" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220706 17:19:03.251" endtime="20220706 17:19:03.251"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.251" endtime="20220706 17:19:03.252"/>
</kw>
<kw name="Coletar ID Usuario" library="usuarios_keywords">
<kw name="Set Variable" library="BuiltIn">
<var>${id_usuario}</var>
<arg>${response.json()["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.252" level="INFO">${id_usuario} = hCGhQqDoo9Si3mDN</msg>
<status status="PASS" starttime="20220706 17:19:03.252" endtime="20220706 17:19:03.252"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.252" level="INFO">${id_usuario} = hCGhQqDoo9Si3mDN</msg>
<status status="PASS" starttime="20220706 17:19:03.252" endtime="20220706 17:19:03.252"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.252" endtime="20220706 17:19:03.252"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.253" endtime="20220706 17:19:03.253"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.253" endtime="20220706 17:19:03.253"/>
</kw>
<kw name="Validar Se &quot;message&quot; Contem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.254" endtime="20220706 17:19:03.254"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.253" endtime="20220706 17:19:03.254"/>
</kw>
<kw name="DELETE Endpoint /usuarios" library="usuarios_keywords">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.256" level="INFO">DELETE Request : url=http://localhost:3000/usuarios/hCGhQqDoo9Si3mDN 
 path_url=/usuarios/hCGhQqDoo9Si3mDN 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.256" level="INFO">DELETE Response : url=http://localhost:3000/usuarios/hCGhQqDoo9Si3mDN 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '9a79f4dd-5e8e-4f54-bab8-89b11458b0aa', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20220706 17:19:03.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.254" endtime="20220706 17:19:03.256"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.256" endtime="20220706 17:19:03.257"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.257" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.257" endtime="20220706 17:19:03.257"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.254" endtime="20220706 17:19:03.257"/>
</kw>
<tag>POST</tag>
<tag>POST_criar_estatico</tag>
<status status="PASS" starttime="20220706 17:19:03.246" endtime="20220706 17:19:03.257"/>
</test>
<test id="s1-t6" name="Cenário: POST Criar Usuario Já Existente 400" line="49">
<kw name="Pegar Dados Usuarios Estatico &quot;user_email_usado&quot;" library="usuarios_keywords" sourcename="Pegar Dados Usuarios Estatico &quot;${user}&quot;">
<kw name="Importar Json Estatico" library="common">
<var>${json}</var>
<arg>json_usuario.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/statics/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220706 17:19:03.258" level="INFO" html="true">Getting file '&lt;a href="file://D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json"&gt;D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json&lt;/a&gt;'.</msg>
<msg timestamp="20220706 17:19:03.258" level="INFO">${arquivo} = {
    "user_valido":{
        "nome": "Alberto Junior",
        "email": "betinho3@qa.com",
        "password": "teste123",
        "administrador": "true"
    },
    "user_invalido":{
        "nome":...</msg>
<status status="PASS" starttime="20220706 17:19:03.258" endtime="20220706 17:19:03.258"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.259" level="INFO">${data} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.258" endtime="20220706 17:19:03.259"/>
</kw>
<msg timestamp="20220706 17:19:03.259" level="INFO">${json} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.258" endtime="20220706 17:19:03.259"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${payload}</var>
<arg>${json["${user}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.259" level="INFO">${payload} = {'nome': 'Neymar Jr', 'email': 'fulano@qa.com.br', 'password': 'teste', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.259" endtime="20220706 17:19:03.259"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.259" endtime="20220706 17:19:03.260"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.260" level="INFO">${payload} = {'nome': 'Neymar Jr', 'email': 'fulano@qa.com.br', 'password': 'teste', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.260" endtime="20220706 17:19:03.260"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.258" endtime="20220706 17:19:03.260"/>
</kw>
<kw name="POST Endpoint /usuarios" library="usuarios_keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>data=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.262" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '73', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Neymar+Jr&amp;email=fulano%40qa.com.br&amp;password=teste&amp;administrador=true 
 </msg>
<msg timestamp="20220706 17:19:03.262" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c0eee3e6-80bf-4eb1-8096-8b5023bc638e', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg timestamp="20220706 17:19:03.262" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.261" endtime="20220706 17:19:03.262"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.262" endtime="20220706 17:19:03.263"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.263" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.263" endtime="20220706 17:19:03.263"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.260" endtime="20220706 17:19:03.263"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.263" endtime="20220706 17:19:03.264"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.263" endtime="20220706 17:19:03.264"/>
</kw>
<kw name="Validar Se &quot;message&quot; Contem &quot;Este email já está sendo usado&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.264" endtime="20220706 17:19:03.265"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.264" endtime="20220706 17:19:03.265"/>
</kw>
<tag>POST</tag>
<tag>POST_usuario_email_usado</tag>
<status status="PASS" starttime="20220706 17:19:03.257" endtime="20220706 17:19:03.265"/>
</test>
<test id="s1-t7" name="Cenário: POST Criar Usuario Com Dados Inválidos 400" line="56">
<kw name="Pegar Dados Usuarios Estatico &quot;user_invalido&quot;" library="usuarios_keywords" sourcename="Pegar Dados Usuarios Estatico &quot;${user}&quot;">
<kw name="Importar Json Estatico" library="common">
<var>${json}</var>
<arg>json_usuario.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/statics/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220706 17:19:03.266" level="INFO" html="true">Getting file '&lt;a href="file://D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json"&gt;D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json&lt;/a&gt;'.</msg>
<msg timestamp="20220706 17:19:03.266" level="INFO">${arquivo} = {
    "user_valido":{
        "nome": "Alberto Junior",
        "email": "betinho3@qa.com",
        "password": "teste123",
        "administrador": "true"
    },
    "user_invalido":{
        "nome":...</msg>
<status status="PASS" starttime="20220706 17:19:03.266" endtime="20220706 17:19:03.266"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.266" level="INFO">${data} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.266" endtime="20220706 17:19:03.266"/>
</kw>
<msg timestamp="20220706 17:19:03.266" level="INFO">${json} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.265" endtime="20220706 17:19:03.266"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${payload}</var>
<arg>${json["${user}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.267" level="INFO">${payload} = {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password': '12234', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.266" endtime="20220706 17:19:03.267"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.267" endtime="20220706 17:19:03.267"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.267" level="INFO">${payload} = {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password': '12234', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.267" endtime="20220706 17:19:03.267"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.265" endtime="20220706 17:19:03.267"/>
</kw>
<kw name="POST Endpoint /usuarios" library="usuarios_keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>data=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.269" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '72', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Roberto+Pente&amp;email=ribhif.com.br&amp;password=12234&amp;administrador=true 
 </msg>
<msg timestamp="20220706 17:19:03.269" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7297635a-1d2f-4906-b5af-d1f9bc28b176', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "email": "email deve ser um email válido"
} 
 </msg>
<msg timestamp="20220706 17:19:03.269" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.267" endtime="20220706 17:19:03.269"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.270" endtime="20220706 17:19:03.270"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.270" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.270" endtime="20220706 17:19:03.270"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.267" endtime="20220706 17:19:03.270"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.270" endtime="20220706 17:19:03.271"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.270" endtime="20220706 17:19:03.271"/>
</kw>
<kw name="Validar Se &quot;email&quot; Contem &quot;email deve ser um email válido&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.271" endtime="20220706 17:19:03.272"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.271" endtime="20220706 17:19:03.272"/>
</kw>
<tag>POST</tag>
<tag>POST_usuario_invalido</tag>
<status status="PASS" starttime="20220706 17:19:03.265" endtime="20220706 17:19:03.272"/>
</test>
<test id="s1-t8" name="Cenário: POST Criar Usuario Sem Nome 400" line="63">
<kw name="Pegar Dados Usuarios Estatico &quot;user_sem_nome&quot;" library="usuarios_keywords" sourcename="Pegar Dados Usuarios Estatico &quot;${user}&quot;">
<kw name="Importar Json Estatico" library="common">
<var>${json}</var>
<arg>json_usuario.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/statics/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220706 17:19:03.273" level="INFO" html="true">Getting file '&lt;a href="file://D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json"&gt;D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json&lt;/a&gt;'.</msg>
<msg timestamp="20220706 17:19:03.273" level="INFO">${arquivo} = {
    "user_valido":{
        "nome": "Alberto Junior",
        "email": "betinho3@qa.com",
        "password": "teste123",
        "administrador": "true"
    },
    "user_invalido":{
        "nome":...</msg>
<status status="PASS" starttime="20220706 17:19:03.273" endtime="20220706 17:19:03.273"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.273" level="INFO">${data} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.273" endtime="20220706 17:19:03.273"/>
</kw>
<msg timestamp="20220706 17:19:03.274" level="INFO">${json} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.273" endtime="20220706 17:19:03.274"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${payload}</var>
<arg>${json["${user}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.274" level="INFO">${payload} = {'nome': '', 'email': 'lorena123@qa.com', 'password': 'teste', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.274" endtime="20220706 17:19:03.274"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.274" endtime="20220706 17:19:03.274"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.274" level="INFO">${payload} = {'nome': '', 'email': 'lorena123@qa.com', 'password': 'teste', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.274" endtime="20220706 17:19:03.274"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.272" endtime="20220706 17:19:03.274"/>
</kw>
<kw name="POST Endpoint /usuarios" library="usuarios_keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>data=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.276" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '64', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=&amp;email=lorena123%40qa.com&amp;password=teste&amp;administrador=true 
 </msg>
<msg timestamp="20220706 17:19:03.276" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '52389e0d-c6df-4413-8134-9a7e56d2ca9e', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '48', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "nome não pode ficar em branco"
} 
 </msg>
<msg timestamp="20220706 17:19:03.276" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.275" endtime="20220706 17:19:03.276"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.276" endtime="20220706 17:19:03.277"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.277" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.277" endtime="20220706 17:19:03.277"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.275" endtime="20220706 17:19:03.277"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.277" endtime="20220706 17:19:03.278"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.277" endtime="20220706 17:19:03.278"/>
</kw>
<kw name="Validar Se &quot;nome&quot; Contem &quot;nome não pode ficar em branco&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.278" endtime="20220706 17:19:03.278"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.278" endtime="20220706 17:19:03.278"/>
</kw>
<tag>POST</tag>
<tag>POST_usuario_sem_nome</tag>
<status status="PASS" starttime="20220706 17:19:03.272" endtime="20220706 17:19:03.279"/>
</test>
<test id="s1-t9" name="Cenário: POST Criar Usuario Sem Email 400" line="70">
<kw name="Pegar Dados Usuarios Estatico &quot;user_sem_email&quot;" library="usuarios_keywords" sourcename="Pegar Dados Usuarios Estatico &quot;${user}&quot;">
<kw name="Importar Json Estatico" library="common">
<var>${json}</var>
<arg>json_usuario.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/statics/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220706 17:19:03.280" level="INFO" html="true">Getting file '&lt;a href="file://D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json"&gt;D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json&lt;/a&gt;'.</msg>
<msg timestamp="20220706 17:19:03.280" level="INFO">${arquivo} = {
    "user_valido":{
        "nome": "Alberto Junior",
        "email": "betinho3@qa.com",
        "password": "teste123",
        "administrador": "true"
    },
    "user_invalido":{
        "nome":...</msg>
<status status="PASS" starttime="20220706 17:19:03.279" endtime="20220706 17:19:03.280"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.280" level="INFO">${data} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.280" endtime="20220706 17:19:03.280"/>
</kw>
<msg timestamp="20220706 17:19:03.280" level="INFO">${json} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.279" endtime="20220706 17:19:03.280"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${payload}</var>
<arg>${json["${user}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.280" level="INFO">${payload} = {'nome': 'Coutinho', 'email': '', 'password': 'couto123', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.280" endtime="20220706 17:19:03.281"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.281" endtime="20220706 17:19:03.281"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.281" level="INFO">${payload} = {'nome': 'Coutinho', 'email': '', 'password': 'couto123', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.281" endtime="20220706 17:19:03.281"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.279" endtime="20220706 17:19:03.281"/>
</kw>
<kw name="POST Endpoint /usuarios" library="usuarios_keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>data=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.283" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '57', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Coutinho&amp;email=&amp;password=couto123&amp;administrador=true 
 </msg>
<msg timestamp="20220706 17:19:03.283" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '662fe26a-8bf4-4a8d-92ec-1b6d65f29671', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "email": "email não pode ficar em branco"
} 
 </msg>
<msg timestamp="20220706 17:19:03.283" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.281" endtime="20220706 17:19:03.283"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.283" endtime="20220706 17:19:03.283"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.283" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.283" endtime="20220706 17:19:03.283"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.281" endtime="20220706 17:19:03.283"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.284" endtime="20220706 17:19:03.284"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.283" endtime="20220706 17:19:03.284"/>
</kw>
<kw name="Validar Se &quot;email&quot; Contem &quot;email não pode ficar em branco&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.285" endtime="20220706 17:19:03.285"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.284" endtime="20220706 17:19:03.285"/>
</kw>
<tag>POST</tag>
<tag>POST_usuario_sem_email</tag>
<status status="PASS" starttime="20220706 17:19:03.279" endtime="20220706 17:19:03.285"/>
</test>
<test id="s1-t10" name="Cenário: POST Criar Usuario Sem Senha 400" line="77">
<kw name="Pegar Dados Usuarios Estatico &quot;user_sem_senha&quot;" library="usuarios_keywords" sourcename="Pegar Dados Usuarios Estatico &quot;${user}&quot;">
<kw name="Importar Json Estatico" library="common">
<var>${json}</var>
<arg>json_usuario.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/statics/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220706 17:19:03.286" level="INFO" html="true">Getting file '&lt;a href="file://D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json"&gt;D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json&lt;/a&gt;'.</msg>
<msg timestamp="20220706 17:19:03.286" level="INFO">${arquivo} = {
    "user_valido":{
        "nome": "Alberto Junior",
        "email": "betinho3@qa.com",
        "password": "teste123",
        "administrador": "true"
    },
    "user_invalido":{
        "nome":...</msg>
<status status="PASS" starttime="20220706 17:19:03.286" endtime="20220706 17:19:03.286"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.287" level="INFO">${data} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.286" endtime="20220706 17:19:03.287"/>
</kw>
<msg timestamp="20220706 17:19:03.287" level="INFO">${json} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.286" endtime="20220706 17:19:03.287"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${payload}</var>
<arg>${json["${user}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.287" level="INFO">${payload} = {'nome': 'Richarlyson', 'email': 'richarl@qa.com.br', 'password': '', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.287" endtime="20220706 17:19:03.287"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.287" endtime="20220706 17:19:03.287"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.287" level="INFO">${payload} = {'nome': 'Richarlyson', 'email': 'richarl@qa.com.br', 'password': '', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.287" endtime="20220706 17:19:03.287"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.286" endtime="20220706 17:19:03.288"/>
</kw>
<kw name="POST Endpoint /usuarios" library="usuarios_keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>data=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.289" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '71', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Richarlyson&amp;email=richarl%40qa.com.br&amp;password=&amp;administrador=true 
 </msg>
<msg timestamp="20220706 17:19:03.289" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '9ae89889-f00a-44ba-a78f-60caf2fabec5', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '56', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "password": "password não pode ficar em branco"
} 
 </msg>
<msg timestamp="20220706 17:19:03.289" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.288" endtime="20220706 17:19:03.289"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.289" endtime="20220706 17:19:03.290"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.290" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.290" endtime="20220706 17:19:03.290"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.288" endtime="20220706 17:19:03.290"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.291" endtime="20220706 17:19:03.292"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.291" endtime="20220706 17:19:03.292"/>
</kw>
<kw name="Validar Se &quot;password&quot; Contem &quot;password não pode ficar em branco&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.292" endtime="20220706 17:19:03.293"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.292" endtime="20220706 17:19:03.293"/>
</kw>
<tag>POST</tag>
<tag>POST_usuario_sem_senha</tag>
<status status="PASS" starttime="20220706 17:19:03.285" endtime="20220706 17:19:03.293"/>
</test>
<test id="s1-t11" name="Cenário: POST Criar Usuario Administrador Invalido 400" line="84">
<kw name="Pegar Dados Usuarios Estatico &quot;user_adm_invalido&quot;" library="usuarios_keywords" sourcename="Pegar Dados Usuarios Estatico &quot;${user}&quot;">
<kw name="Importar Json Estatico" library="common">
<var>${json}</var>
<arg>json_usuario.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/statics/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220706 17:19:03.294" level="INFO" html="true">Getting file '&lt;a href="file://D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json"&gt;D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json&lt;/a&gt;'.</msg>
<msg timestamp="20220706 17:19:03.294" level="INFO">${arquivo} = {
    "user_valido":{
        "nome": "Alberto Junior",
        "email": "betinho3@qa.com",
        "password": "teste123",
        "administrador": "true"
    },
    "user_invalido":{
        "nome":...</msg>
<status status="PASS" starttime="20220706 17:19:03.294" endtime="20220706 17:19:03.294"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.294" level="INFO">${data} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.294" endtime="20220706 17:19:03.294"/>
</kw>
<msg timestamp="20220706 17:19:03.294" level="INFO">${json} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.293" endtime="20220706 17:19:03.294"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${payload}</var>
<arg>${json["${user}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.295" level="INFO">${payload} = {'nome': 'Carlos Ramos', 'email': 'carlitos@qa.com.br', 'password': 'couto123', 'administrador': 'verdade'}</msg>
<status status="PASS" starttime="20220706 17:19:03.294" endtime="20220706 17:19:03.295"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.295" endtime="20220706 17:19:03.295"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.295" level="INFO">${payload} = {'nome': 'Carlos Ramos', 'email': 'carlitos@qa.com.br', 'password': 'couto123', 'administrador': 'verdade'}</msg>
<status status="PASS" starttime="20220706 17:19:03.295" endtime="20220706 17:19:03.295"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.293" endtime="20220706 17:19:03.295"/>
</kw>
<kw name="POST Endpoint /usuarios" library="usuarios_keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>data=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.298" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '84', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Carlos+Ramos&amp;email=carlitos%40qa.com.br&amp;password=couto123&amp;administrador=verdade 
 </msg>
<msg timestamp="20220706 17:19:03.298" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'df741af9-4829-49b4-930e-944d8ce50c00', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '67', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "administrador": "administrador deve ser 'true' ou 'false'"
} 
 </msg>
<msg timestamp="20220706 17:19:03.298" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.296" endtime="20220706 17:19:03.298"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.298" endtime="20220706 17:19:03.298"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.299" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.299" endtime="20220706 17:19:03.299"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.295" endtime="20220706 17:19:03.299"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.299" endtime="20220706 17:19:03.300"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.299" endtime="20220706 17:19:03.300"/>
</kw>
<kw name="Validar Se &quot;administrador&quot; Contem &quot;administrador deve ser 'true' ou 'false'&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.300" endtime="20220706 17:19:03.300"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.300" endtime="20220706 17:19:03.300"/>
</kw>
<tag>POST</tag>
<tag>POST_usuario_adm_invalido</tag>
<status status="PASS" starttime="20220706 17:19:03.293" endtime="20220706 17:19:03.301"/>
</test>
<test id="s1-t12" name="Cenário: PUT Editar Usuario 200" line="92">
<kw name="Criar Dados para Usuario Válido" library="dynamics">
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220706 17:19:03.301" level="INFO">${nome} = Elizabeth Romero</msg>
<status status="PASS" starttime="20220706 17:19:03.301" endtime="20220706 17:19:03.301"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220706 17:19:03.302" level="INFO">${email} = leblanccassie@example.net</msg>
<status status="PASS" starttime="20220706 17:19:03.301" endtime="20220706 17:19:03.302"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<arg>length=5</arg>
<arg>special_chars=True</arg>
<arg>digits=True</arg>
<arg>upper_case=True</arg>
<arg>lower_case=True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220706 17:19:03.302" level="INFO">${senha} = (*4Ud</msg>
<status status="PASS" starttime="20220706 17:19:03.302" endtime="20220706 17:19:03.302"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 17:19:03.302" level="INFO">${payload} = {'nome': 'Elizabeth Romero', 'email': 'leblanccassie@example.net', 'password': '(*4Ud', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.302" endtime="20220706 17:19:03.302"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.302" endtime="20220706 17:19:03.303"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.303" level="INFO">${payload} = {'nome': 'Elizabeth Romero', 'email': 'leblanccassie@example.net', 'password': '(*4Ud', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.303" endtime="20220706 17:19:03.303"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.301" endtime="20220706 17:19:03.303"/>
</kw>
<kw name="Coletar ID Usuario Aleatorio" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.305" level="INFO">GET Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.305" level="INFO">GET Response : url=http://localhost:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f6b62059-35e0-4628-aaaa-ce1480f09089', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '12261', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 58,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Garrett Hoffman",
            "email": "heathernavarro@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "1YrNUFg67NujFkVr"
        },
        {
            "nome": "Bryan Aguilar",
            "email": "conleylori@example.org",
            "password": "&amp;9UPr",
            "administrador": "false",
            "_id": "1huYkTw4pgrTDcTJ"
        },
        {
            "nome": "Patricia Soto",
            "email": "vleon@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "34eyYGCPDeNwRVDH"
        },
        {
            "nome": "Meghan Orr",
            "email": "nkirk@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "3MvOuzoe5HcVvtZx"
        },
        {
            "nome": "Edwin Whitney",
            "email": "dmorales@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "3hiiroduALppqme6"
        },
        {
            "nome": "Jared Davis",
            "email": "david14@example.com",
            "password": "$1Bnn",
            "administrador": "true",
            "_id": "3oMwhgFYVzS2Tnai"
        },
        {
            "nome": "Ashley Garcia",
            "email": "tsanchez@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "4yVtXcE9HAuM81XK"
        },
        {
            "nome": "Patrick Krause",
            "email": "hgreen@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "6Viv3szSTs2E414T"
        },
        {
            "nome": "Fred Silva",
            "email": "rmills@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "6uTlIEDTY4tPG2NY"
        },
        {
            "nome": "Lisa Washington",
            "email": "ryan46@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "9ac1FG3y6V0zAxJe"
        },
        {
            "nome": "Davi luis",
            "email": "daviluis3@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "C8AvqUuxdkRE4l7K"
        },
        {
            "nome": "Jacob Turner",
            "email": "linda22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Dfb0wpiOiYE3OFiE"
        },
        {
            "nome": "Mary Patton",
            "email": "william71@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "EbFcSTgftrJy1uba"
        },
        {
            "nome": "William Stokes",
            "email": "smithkara@example.org",
            "password": "&amp;0WmY",
            "administrador": "true",
            "_id": "FrJGBoSo7Wn0Lpdu"
        },
        {
            "nome": "James Hernandez",
            "email": "jonesbrenda@example.com",
            "password": "(3Ibm",
            "administrador": "true",
            "_id": "GwfZ75MYS8RuIoNe"
        },
        {
            "nome": "Kelly Walker",
            "email": "gordondennis@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "IZwqoy15uk1nRURw"
        },
        {
            "nome": "Deborah Smith",
            "email": "wsimpson@example.net",
            "password": "+84St",
            "administrador": "true",
            "_id": "JAIfQc9Y7jdd1VOj"
        },
        {
            "nome": "Neymaru",
            "email": "fulano@qa.com.br",
            "password": "+2Ce8",
            "administrador": "true",
            "_id": "JJAwZmD0BGmmOavI"
        },
        {
            "nome": "Cazé",
            "email": "timothy39@example.net",
            "password": "+1AiH",
            "administrador": "true",
            "_id": "LBNTveEpMboFxKLp"
        },
        {
            "nome": "Sophia",
            "email": "Sophia_@qa.com",
            "password": "teste",
            "administrador": "false",
            "_id": "MypbABXqyjIiWamv"
        },
        {
            "nome": "William Carey",
            "email": "smithlisa@example.com",
            "password": "d^4Xm",
            "administrador": "true",
            "_id": "OdJ5yswAKeDh0RvI"
        },
        {
            "nome": "Bryan Larson",
            "email": "agilbert@example.org",
            "password": "$F3Tz",
            "administrador": "true",
            "_id": "PPw4iR5jZnVlE8UD"
        },
        {
            "nome": "Randall Meza",
            "email": "wwilliams@example.com",
            "password": "teste",
            "administrador": "false",
            "_id": "Qib9oETBywJ1LWNS"
        },
        {
            "nome": "Cody Adams",
            "email": "tbaker@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "RPUBl1zNkQBwYilz"
        },
        {
            "nome": "Brett Lewis",
            "email": "hamptondarryl@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "RfCSZupicTZLyPHv"
        },
        {
            "nome": "Jennifer Williams",
            "email": "probinson@example.org",
            "password": "*3Yfl",
            "administrador": "true",
            "_id": "TI7ypbgonQUp5Ki9"
        },
        {
            "nome": "John Gregory",
            "email": "zsmith@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "TqmKjbcOPAxIk2TX"
        },
        {
            "nome": "Nicholas Singleton",
            "email": "gilmorelisa@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Tz7VCr34EdGeTrMl"
        },
        {
            "nome": "Ryan Nelson",
            "email": "armstrongrita@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "ViliyyDZ5Wb5DUqI"
        },
        {
            "nome": "Charles Miles",
            "email": "julie74@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "YQaC6QQN3u5EkHiJ"
        },
        {
            "nome": "Wendy Ponce",
            "email": "xelliott@example.com",
            "password": "!F6Dm",
            "administrador": "true",
            "_id": "Z3ONAABtVcA6CUKX"
        },
        {
            "nome": "Ronaldinho Gaucho",
            "email": "ronaldinh9@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "ZBvcyIXYSEKQq9f9"
        },
        {
            "nome": "Jesus Butler",
            "email": "roysmith@example.com",
            "password": ")5B9u",
            "administrador": "true",
            "_id": "aI3a0u0wTf9S82Rt"
        },
        {
            "nome": "Danielle Frank",
            "email": "bryan90@example.org",
            "password": "%9Ija",
            "administrador": "true",
            "_id": "cH9igOkRlSKajqik"
        },
        {
            "nome": "Miss Michelle Villarreal",
            "email": "margaretkelly@example.com",
            "password": "N*0Ae",
            "administrador": "true",
            "_id": "d15FCfFp3a6ssvFn"
        },
        {
            "nome": "Joseph Ryan",
            "email": "roger38@example.org",
            "password": "$3NlS",
            "administrador": "true",
            "_id": "dKX9A9YWjknh6GBX"
        },
        {
            "nome": "Brittany Lara",
            "email": "stevensstephanie@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "fLnW3WziOY4hT6y4"
        },
        {
            "nome": "Kristen Holder",
            "email": "jlee@example.com",
            "password": "#5JoO",
            "administrador": "true",
            "_id": "hDSbtXkhlLtTcEgF"
        },
        {
            "nome": "James Davis",
            "email": "sdaniel@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "hUz4jiSuQYWUy1GS"
        },
        {
            "nome": "Robert Collins",
            "email": "walshryan@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "lvfhDVcRgVBVBEfz"
        },
        {
            "nome": "Richard Gomes",
            "email": "richard_@qa.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "m42DKtadITK7v6Kb"
        },
        {
            "nome": "Sophia Light",
            "email": "Sophia123@qa.com.br",
            "password": "(e1Ww",
            "administrador": "false",
            "_id": "mIHZzFvClk19pLM7"
        },
        {
            "nome": "Chris Aguirre",
            "email": "joycehill@example.com",
            "password": "teste",
            "administrador": "false",
            "_id": "nefiiMwOLD3kT24D"
        },
        {
            "nome": "Kenneth Smith",
            "email": "toddjones@example.com",
            "password": "+0Pll",
            "administrador": "true",
            "_id": "oCwRwCVrDfLFbt7M"
        },
        {
            "nome": "Amy Rivera",
            "email": "james22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "qWR0ri4oJCzJeTCo"
        },
        {
            "nome": "Frank Castillo",
            "email": "jenniferacosta@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "qylyHe0C2NcnPESA"
        },
        {
            "nome": "Rulque Grand... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220706 17:19:03.305" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.303" endtime="20220706 17:19:03.305"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${numbers}</var>
<arg>random.sample(range(1, ${response.json()["quantidade"]}),1)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.305" level="INFO">${numbers} = [23]</msg>
<status status="PASS" starttime="20220706 17:19:03.305" endtime="20220706 17:19:03.305"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_usuario}</var>
<arg>${response.json()["usuarios"][${numbers}[0]]["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.306" level="INFO">${id_usuario} = Qib9oETBywJ1LWNS</msg>
<status status="PASS" starttime="20220706 17:19:03.305" endtime="20220706 17:19:03.306"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.306" level="INFO">${id_usuario} = Qib9oETBywJ1LWNS</msg>
<status status="PASS" starttime="20220706 17:19:03.306" endtime="20220706 17:19:03.306"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.306" endtime="20220706 17:19:03.306"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.303" endtime="20220706 17:19:03.306"/>
</kw>
<kw name="PUT Endpoint /usuarios" library="usuarios_keywords">
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.310" level="INFO">PUT Request : url=http://localhost:3000/usuarios/Qib9oETBywJ1LWNS 
 path_url=/usuarios/Qib9oETBywJ1LWNS 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '112', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Elizabeth Romero", "email": "leblanccassie@example.net", "password": "(*4Ud", "administrador": "true"}' 
 </msg>
<msg timestamp="20220706 17:19:03.310" level="INFO">PUT Response : url=http://localhost:3000/usuarios/Qib9oETBywJ1LWNS 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '933ba366-b103-49b6-90c2-69fc58e33c82', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20220706 17:19:03.310" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.307" endtime="20220706 17:19:03.310"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.310" endtime="20220706 17:19:03.310"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.310" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.310" endtime="20220706 17:19:03.310"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.307" endtime="20220706 17:19:03.310"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.311" endtime="20220706 17:19:03.311"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.311" endtime="20220706 17:19:03.311"/>
</kw>
<kw name="Validar Se &quot;message&quot; Contem &quot;Registro alterado com sucesso&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.312" endtime="20220706 17:19:03.312"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.311" endtime="20220706 17:19:03.312"/>
</kw>
<tag>PUT</tag>
<tag>PUT_editar_todos_dados</tag>
<status status="PASS" starttime="20220706 17:19:03.301" endtime="20220706 17:19:03.312"/>
</test>
<test id="s1-t13" name="Cenário: PUT Criar novo Usuario 201" line="100">
<kw name="Criar Dados para Usuario Válido" library="dynamics">
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220706 17:19:03.313" level="INFO">${nome} = Lauren Brown</msg>
<status status="PASS" starttime="20220706 17:19:03.313" endtime="20220706 17:19:03.313"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220706 17:19:03.313" level="INFO">${email} = ybennett@example.net</msg>
<status status="PASS" starttime="20220706 17:19:03.313" endtime="20220706 17:19:03.313"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<arg>length=5</arg>
<arg>special_chars=True</arg>
<arg>digits=True</arg>
<arg>upper_case=True</arg>
<arg>lower_case=True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220706 17:19:03.314" level="INFO">${senha} = (N9Dv</msg>
<status status="PASS" starttime="20220706 17:19:03.313" endtime="20220706 17:19:03.314"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 17:19:03.314" level="INFO">${payload} = {'nome': 'Lauren Brown', 'email': 'ybennett@example.net', 'password': '(N9Dv', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.314" endtime="20220706 17:19:03.314"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.314" endtime="20220706 17:19:03.314"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.314" level="INFO">${payload} = {'nome': 'Lauren Brown', 'email': 'ybennett@example.net', 'password': '(N9Dv', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.314" endtime="20220706 17:19:03.314"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.313" endtime="20220706 17:19:03.314"/>
</kw>
<kw name="Definir ID Usuario &quot;c74wn5c972y23r&quot;" library="usuarios_keywords" sourcename="Definir ID Usuario &quot;${id_usuario}&quot;">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.315" level="INFO">${id_usuario} = c74wn5c972y23r</msg>
<status status="PASS" starttime="20220706 17:19:03.315" endtime="20220706 17:19:03.315"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.315" endtime="20220706 17:19:03.315"/>
</kw>
<kw name="PUT Endpoint /usuarios" library="usuarios_keywords">
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.317" level="INFO">PUT Request : url=http://localhost:3000/usuarios/c74wn5c972y23r 
 path_url=/usuarios/c74wn5c972y23r 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '103', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Lauren Brown", "email": "ybennett@example.net", "password": "(N9Dv", "administrador": "true"}' 
 </msg>
<msg timestamp="20220706 17:19:03.317" level="INFO">PUT Response : url=http://localhost:3000/usuarios/c74wn5c972y23r 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b570cf6a-3bfc-498b-924c-1fa4fae77ce3', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "1nkJ8So16hb9jLP6"
} 
 </msg>
<msg timestamp="20220706 17:19:03.317" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.315" endtime="20220706 17:19:03.317"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.317" endtime="20220706 17:19:03.318"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.318" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.318" endtime="20220706 17:19:03.318"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.315" endtime="20220706 17:19:03.318"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.318" endtime="20220706 17:19:03.319"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.318" endtime="20220706 17:19:03.319"/>
</kw>
<kw name="Validar Se &quot;message&quot; Contem &quot;Cadastro realizado com sucesso&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.319" endtime="20220706 17:19:03.319"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.319" endtime="20220706 17:19:03.319"/>
</kw>
<kw name="Validar Alguma Resposta Vazia &quot;_id&quot;" library="common" sourcename="Validar Alguma Resposta Vazia &quot;${espaco}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()["${espaco}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220706 17:19:03.320" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220706 17:19:03.320" endtime="20220706 17:19:03.320"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.320" endtime="20220706 17:19:03.320"/>
</kw>
<tag>PUT</tag>
<tag>PUT_criar_usuario</tag>
<status status="PASS" starttime="20220706 17:19:03.312" endtime="20220706 17:19:03.320"/>
</test>
<test id="s1-t14" name="Cenário: PUT Atualizar Nome 200" line="109">
<kw name="Coletar ID Usuario Aleatorio" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.323" level="INFO">GET Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.323" level="INFO">GET Response : url=http://localhost:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6de9d52b-8753-4889-9c86-3b63d8d0cbb9', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '12478', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 59,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Garrett Hoffman",
            "email": "heathernavarro@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "1YrNUFg67NujFkVr"
        },
        {
            "nome": "Bryan Aguilar",
            "email": "conleylori@example.org",
            "password": "&amp;9UPr",
            "administrador": "false",
            "_id": "1huYkTw4pgrTDcTJ"
        },
        {
            "nome": "Lauren Brown",
            "email": "ybennett@example.net",
            "password": "(N9Dv",
            "administrador": "true",
            "_id": "1nkJ8So16hb9jLP6"
        },
        {
            "nome": "Patricia Soto",
            "email": "vleon@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "34eyYGCPDeNwRVDH"
        },
        {
            "nome": "Meghan Orr",
            "email": "nkirk@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "3MvOuzoe5HcVvtZx"
        },
        {
            "nome": "Edwin Whitney",
            "email": "dmorales@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "3hiiroduALppqme6"
        },
        {
            "nome": "Jared Davis",
            "email": "david14@example.com",
            "password": "$1Bnn",
            "administrador": "true",
            "_id": "3oMwhgFYVzS2Tnai"
        },
        {
            "nome": "Ashley Garcia",
            "email": "tsanchez@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "4yVtXcE9HAuM81XK"
        },
        {
            "nome": "Patrick Krause",
            "email": "hgreen@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "6Viv3szSTs2E414T"
        },
        {
            "nome": "Fred Silva",
            "email": "rmills@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "6uTlIEDTY4tPG2NY"
        },
        {
            "nome": "Lisa Washington",
            "email": "ryan46@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "9ac1FG3y6V0zAxJe"
        },
        {
            "nome": "Davi luis",
            "email": "daviluis3@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "C8AvqUuxdkRE4l7K"
        },
        {
            "nome": "Jacob Turner",
            "email": "linda22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Dfb0wpiOiYE3OFiE"
        },
        {
            "nome": "Mary Patton",
            "email": "william71@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "EbFcSTgftrJy1uba"
        },
        {
            "nome": "William Stokes",
            "email": "smithkara@example.org",
            "password": "&amp;0WmY",
            "administrador": "true",
            "_id": "FrJGBoSo7Wn0Lpdu"
        },
        {
            "nome": "James Hernandez",
            "email": "jonesbrenda@example.com",
            "password": "(3Ibm",
            "administrador": "true",
            "_id": "GwfZ75MYS8RuIoNe"
        },
        {
            "nome": "Kelly Walker",
            "email": "gordondennis@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "IZwqoy15uk1nRURw"
        },
        {
            "nome": "Deborah Smith",
            "email": "wsimpson@example.net",
            "password": "+84St",
            "administrador": "true",
            "_id": "JAIfQc9Y7jdd1VOj"
        },
        {
            "nome": "Neymaru",
            "email": "fulano@qa.com.br",
            "password": "+2Ce8",
            "administrador": "true",
            "_id": "JJAwZmD0BGmmOavI"
        },
        {
            "nome": "Cazé",
            "email": "timothy39@example.net",
            "password": "+1AiH",
            "administrador": "true",
            "_id": "LBNTveEpMboFxKLp"
        },
        {
            "nome": "Sophia",
            "email": "Sophia_@qa.com",
            "password": "teste",
            "administrador": "false",
            "_id": "MypbABXqyjIiWamv"
        },
        {
            "nome": "William Carey",
            "email": "smithlisa@example.com",
            "password": "d^4Xm",
            "administrador": "true",
            "_id": "OdJ5yswAKeDh0RvI"
        },
        {
            "nome": "Bryan Larson",
            "email": "agilbert@example.org",
            "password": "$F3Tz",
            "administrador": "true",
            "_id": "PPw4iR5jZnVlE8UD"
        },
        {
            "nome": "Elizabeth Romero",
            "email": "leblanccassie@example.net",
            "password": "(*4Ud",
            "administrador": "true",
            "_id": "Qib9oETBywJ1LWNS"
        },
        {
            "nome": "Cody Adams",
            "email": "tbaker@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "RPUBl1zNkQBwYilz"
        },
        {
            "nome": "Brett Lewis",
            "email": "hamptondarryl@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "RfCSZupicTZLyPHv"
        },
        {
            "nome": "Jennifer Williams",
            "email": "probinson@example.org",
            "password": "*3Yfl",
            "administrador": "true",
            "_id": "TI7ypbgonQUp5Ki9"
        },
        {
            "nome": "John Gregory",
            "email": "zsmith@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "TqmKjbcOPAxIk2TX"
        },
        {
            "nome": "Nicholas Singleton",
            "email": "gilmorelisa@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Tz7VCr34EdGeTrMl"
        },
        {
            "nome": "Ryan Nelson",
            "email": "armstrongrita@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "ViliyyDZ5Wb5DUqI"
        },
        {
            "nome": "Charles Miles",
            "email": "julie74@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "YQaC6QQN3u5EkHiJ"
        },
        {
            "nome": "Wendy Ponce",
            "email": "xelliott@example.com",
            "password": "!F6Dm",
            "administrador": "true",
            "_id": "Z3ONAABtVcA6CUKX"
        },
        {
            "nome": "Ronaldinho Gaucho",
            "email": "ronaldinh9@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "ZBvcyIXYSEKQq9f9"
        },
        {
            "nome": "Jesus Butler",
            "email": "roysmith@example.com",
            "password": ")5B9u",
            "administrador": "true",
            "_id": "aI3a0u0wTf9S82Rt"
        },
        {
            "nome": "Danielle Frank",
            "email": "bryan90@example.org",
            "password": "%9Ija",
            "administrador": "true",
            "_id": "cH9igOkRlSKajqik"
        },
        {
            "nome": "Miss Michelle Villarreal",
            "email": "margaretkelly@example.com",
            "password": "N*0Ae",
            "administrador": "true",
            "_id": "d15FCfFp3a6ssvFn"
        },
        {
            "nome": "Joseph Ryan",
            "email": "roger38@example.org",
            "password": "$3NlS",
            "administrador": "true",
            "_id": "dKX9A9YWjknh6GBX"
        },
        {
            "nome": "Brittany Lara",
            "email": "stevensstephanie@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "fLnW3WziOY4hT6y4"
        },
        {
            "nome": "Kristen Holder",
            "email": "jlee@example.com",
            "password": "#5JoO",
            "administrador": "true",
            "_id": "hDSbtXkhlLtTcEgF"
        },
        {
            "nome": "James Davis",
            "email": "sdaniel@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "hUz4jiSuQYWUy1GS"
        },
        {
            "nome": "Robert Collins",
            "email": "walshryan@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "lvfhDVcRgVBVBEfz"
        },
        {
            "nome": "Richard Gomes",
            "email": "richard_@qa.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "m42DKtadITK7v6Kb"
        },
        {
            "nome": "Sophia Light",
            "email": "Sophia123@qa.com.br",
            "password": "(e1Ww",
            "administrador": "false",
            "_id": "mIHZzFvClk19pLM7"
        },
        {
            "nome": "Chris Aguirre",
            "email": "joycehill@example.com",
            "password": "teste",
            "administrador": "false",
            "_id": "nefiiMwOLD3kT24D"
        },
        {
            "nome": "Kenneth Smith",
            "email": "toddjones@example.com",
            "password": "+0Pll",
            "administrador": "true",
            "_id": "oCwRwCVrDfLFbt7M"
        },
        {
            "nome": "Amy Rivera",
            "email": "james22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "qWR0ri4oJCzJeTCo"
        },
        {
            "nome": "Frank Castill... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220706 17:19:03.323" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.321" endtime="20220706 17:19:03.323"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${numbers}</var>
<arg>random.sample(range(1, ${response.json()["quantidade"]}),1)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.323" level="INFO">${numbers} = [33]</msg>
<status status="PASS" starttime="20220706 17:19:03.323" endtime="20220706 17:19:03.323"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_usuario}</var>
<arg>${response.json()["usuarios"][${numbers}[0]]["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.324" level="INFO">${id_usuario} = ZBvcyIXYSEKQq9f9</msg>
<status status="PASS" starttime="20220706 17:19:03.323" endtime="20220706 17:19:03.324"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.324" level="INFO">${id_usuario} = ZBvcyIXYSEKQq9f9</msg>
<status status="PASS" starttime="20220706 17:19:03.324" endtime="20220706 17:19:03.324"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.324" endtime="20220706 17:19:03.324"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.321" endtime="20220706 17:19:03.324"/>
</kw>
<kw name="GET Endpoint /usuarios por ID" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.326" level="INFO">GET Request : url=http://localhost:3000/usuarios/ZBvcyIXYSEKQq9f9 
 path_url=/usuarios/ZBvcyIXYSEKQq9f9 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.326" level="INFO">GET Response : url=http://localhost:3000/usuarios/ZBvcyIXYSEKQq9f9 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e9f42a46-4c31-40c8-803f-f77e21ac0d11', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '160', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "Ronaldinho Gaucho",
    "email": "ronaldinh9@qa.com.br",
    "password": "teste123",
    "administrador": "true",
    "_id": "ZBvcyIXYSEKQq9f9"
} 
 </msg>
<msg timestamp="20220706 17:19:03.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.324" endtime="20220706 17:19:03.326"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.326" endtime="20220706 17:19:03.326"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.326" endtime="20220706 17:19:03.327"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.324" endtime="20220706 17:19:03.327"/>
</kw>
<kw name="Alterar Dados Payload Nome" library="usuarios_keywords">
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220706 17:19:03.327" level="INFO">${nome} = Yvette Young</msg>
<status status="PASS" starttime="20220706 17:19:03.327" endtime="20220706 17:19:03.327"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${response.json()["email"]}</arg>
<arg>password=${response.json()["password"]}</arg>
<arg>administrador=${response.json()["administrador"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 17:19:03.328" level="INFO">${payload} = {'nome': 'Yvette Young', 'email': 'ronaldinh9@qa.com.br', 'password': 'teste123', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.327" endtime="20220706 17:19:03.328"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.328" endtime="20220706 17:19:03.328"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.329" level="INFO">${payload} = {'nome': 'Yvette Young', 'email': 'ronaldinh9@qa.com.br', 'password': 'teste123', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.328" endtime="20220706 17:19:03.329"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.327" endtime="20220706 17:19:03.329"/>
</kw>
<kw name="PUT Endpoint /usuarios" library="usuarios_keywords">
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.331" level="INFO">PUT Request : url=http://localhost:3000/usuarios/ZBvcyIXYSEKQq9f9 
 path_url=/usuarios/ZBvcyIXYSEKQq9f9 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '106', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Yvette Young", "email": "ronaldinh9@qa.com.br", "password": "teste123", "administrador": "true"}' 
 </msg>
<msg timestamp="20220706 17:19:03.331" level="INFO">PUT Response : url=http://localhost:3000/usuarios/ZBvcyIXYSEKQq9f9 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'dff8876b-e0b1-4d64-b556-d7beabbf87a9', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20220706 17:19:03.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.329" endtime="20220706 17:19:03.331"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.331" endtime="20220706 17:19:03.331"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.331" endtime="20220706 17:19:03.332"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.329" endtime="20220706 17:19:03.332"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.332" endtime="20220706 17:19:03.333"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.332" endtime="20220706 17:19:03.333"/>
</kw>
<kw name="Validar Se &quot;message&quot; Contem &quot;Registro alterado com sucesso&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.333" endtime="20220706 17:19:03.333"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.333" endtime="20220706 17:19:03.333"/>
</kw>
<tag>PUT</tag>
<tag>PUT_atualizar_nome</tag>
<status status="PASS" starttime="20220706 17:19:03.320" endtime="20220706 17:19:03.333"/>
</test>
<test id="s1-t15" name="Cenário: PUT Atualizar Email 200" line="118">
<kw name="Coletar ID Usuario Aleatorio" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.336" level="INFO">GET Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.336" level="INFO">GET Response : url=http://localhost:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '90386826-076b-42a0-be6d-33be1fb44300', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '12473', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 59,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Garrett Hoffman",
            "email": "heathernavarro@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "1YrNUFg67NujFkVr"
        },
        {
            "nome": "Bryan Aguilar",
            "email": "conleylori@example.org",
            "password": "&amp;9UPr",
            "administrador": "false",
            "_id": "1huYkTw4pgrTDcTJ"
        },
        {
            "nome": "Lauren Brown",
            "email": "ybennett@example.net",
            "password": "(N9Dv",
            "administrador": "true",
            "_id": "1nkJ8So16hb9jLP6"
        },
        {
            "nome": "Patricia Soto",
            "email": "vleon@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "34eyYGCPDeNwRVDH"
        },
        {
            "nome": "Meghan Orr",
            "email": "nkirk@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "3MvOuzoe5HcVvtZx"
        },
        {
            "nome": "Edwin Whitney",
            "email": "dmorales@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "3hiiroduALppqme6"
        },
        {
            "nome": "Jared Davis",
            "email": "david14@example.com",
            "password": "$1Bnn",
            "administrador": "true",
            "_id": "3oMwhgFYVzS2Tnai"
        },
        {
            "nome": "Ashley Garcia",
            "email": "tsanchez@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "4yVtXcE9HAuM81XK"
        },
        {
            "nome": "Patrick Krause",
            "email": "hgreen@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "6Viv3szSTs2E414T"
        },
        {
            "nome": "Fred Silva",
            "email": "rmills@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "6uTlIEDTY4tPG2NY"
        },
        {
            "nome": "Lisa Washington",
            "email": "ryan46@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "9ac1FG3y6V0zAxJe"
        },
        {
            "nome": "Davi luis",
            "email": "daviluis3@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "C8AvqUuxdkRE4l7K"
        },
        {
            "nome": "Jacob Turner",
            "email": "linda22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Dfb0wpiOiYE3OFiE"
        },
        {
            "nome": "Mary Patton",
            "email": "william71@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "EbFcSTgftrJy1uba"
        },
        {
            "nome": "William Stokes",
            "email": "smithkara@example.org",
            "password": "&amp;0WmY",
            "administrador": "true",
            "_id": "FrJGBoSo7Wn0Lpdu"
        },
        {
            "nome": "James Hernandez",
            "email": "jonesbrenda@example.com",
            "password": "(3Ibm",
            "administrador": "true",
            "_id": "GwfZ75MYS8RuIoNe"
        },
        {
            "nome": "Kelly Walker",
            "email": "gordondennis@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "IZwqoy15uk1nRURw"
        },
        {
            "nome": "Deborah Smith",
            "email": "wsimpson@example.net",
            "password": "+84St",
            "administrador": "true",
            "_id": "JAIfQc9Y7jdd1VOj"
        },
        {
            "nome": "Neymaru",
            "email": "fulano@qa.com.br",
            "password": "+2Ce8",
            "administrador": "true",
            "_id": "JJAwZmD0BGmmOavI"
        },
        {
            "nome": "Cazé",
            "email": "timothy39@example.net",
            "password": "+1AiH",
            "administrador": "true",
            "_id": "LBNTveEpMboFxKLp"
        },
        {
            "nome": "Sophia",
            "email": "Sophia_@qa.com",
            "password": "teste",
            "administrador": "false",
            "_id": "MypbABXqyjIiWamv"
        },
        {
            "nome": "William Carey",
            "email": "smithlisa@example.com",
            "password": "d^4Xm",
            "administrador": "true",
            "_id": "OdJ5yswAKeDh0RvI"
        },
        {
            "nome": "Bryan Larson",
            "email": "agilbert@example.org",
            "password": "$F3Tz",
            "administrador": "true",
            "_id": "PPw4iR5jZnVlE8UD"
        },
        {
            "nome": "Elizabeth Romero",
            "email": "leblanccassie@example.net",
            "password": "(*4Ud",
            "administrador": "true",
            "_id": "Qib9oETBywJ1LWNS"
        },
        {
            "nome": "Cody Adams",
            "email": "tbaker@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "RPUBl1zNkQBwYilz"
        },
        {
            "nome": "Brett Lewis",
            "email": "hamptondarryl@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "RfCSZupicTZLyPHv"
        },
        {
            "nome": "Jennifer Williams",
            "email": "probinson@example.org",
            "password": "*3Yfl",
            "administrador": "true",
            "_id": "TI7ypbgonQUp5Ki9"
        },
        {
            "nome": "John Gregory",
            "email": "zsmith@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "TqmKjbcOPAxIk2TX"
        },
        {
            "nome": "Nicholas Singleton",
            "email": "gilmorelisa@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Tz7VCr34EdGeTrMl"
        },
        {
            "nome": "Ryan Nelson",
            "email": "armstrongrita@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "ViliyyDZ5Wb5DUqI"
        },
        {
            "nome": "Charles Miles",
            "email": "julie74@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "YQaC6QQN3u5EkHiJ"
        },
        {
            "nome": "Wendy Ponce",
            "email": "xelliott@example.com",
            "password": "!F6Dm",
            "administrador": "true",
            "_id": "Z3ONAABtVcA6CUKX"
        },
        {
            "nome": "Yvette Young",
            "email": "ronaldinh9@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "ZBvcyIXYSEKQq9f9"
        },
        {
            "nome": "Jesus Butler",
            "email": "roysmith@example.com",
            "password": ")5B9u",
            "administrador": "true",
            "_id": "aI3a0u0wTf9S82Rt"
        },
        {
            "nome": "Danielle Frank",
            "email": "bryan90@example.org",
            "password": "%9Ija",
            "administrador": "true",
            "_id": "cH9igOkRlSKajqik"
        },
        {
            "nome": "Miss Michelle Villarreal",
            "email": "margaretkelly@example.com",
            "password": "N*0Ae",
            "administrador": "true",
            "_id": "d15FCfFp3a6ssvFn"
        },
        {
            "nome": "Joseph Ryan",
            "email": "roger38@example.org",
            "password": "$3NlS",
            "administrador": "true",
            "_id": "dKX9A9YWjknh6GBX"
        },
        {
            "nome": "Brittany Lara",
            "email": "stevensstephanie@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "fLnW3WziOY4hT6y4"
        },
        {
            "nome": "Kristen Holder",
            "email": "jlee@example.com",
            "password": "#5JoO",
            "administrador": "true",
            "_id": "hDSbtXkhlLtTcEgF"
        },
        {
            "nome": "James Davis",
            "email": "sdaniel@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "hUz4jiSuQYWUy1GS"
        },
        {
            "nome": "Robert Collins",
            "email": "walshryan@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "lvfhDVcRgVBVBEfz"
        },
        {
            "nome": "Richard Gomes",
            "email": "richard_@qa.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "m42DKtadITK7v6Kb"
        },
        {
            "nome": "Sophia Light",
            "email": "Sophia123@qa.com.br",
            "password": "(e1Ww",
            "administrador": "false",
            "_id": "mIHZzFvClk19pLM7"
        },
        {
            "nome": "Chris Aguirre",
            "email": "joycehill@example.com",
            "password": "teste",
            "administrador": "false",
            "_id": "nefiiMwOLD3kT24D"
        },
        {
            "nome": "Kenneth Smith",
            "email": "toddjones@example.com",
            "password": "+0Pll",
            "administrador": "true",
            "_id": "oCwRwCVrDfLFbt7M"
        },
        {
            "nome": "Amy Rivera",
            "email": "james22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "qWR0ri4oJCzJeTCo"
        },
        {
            "nome": "Frank Castillo",
 ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220706 17:19:03.336" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.334" endtime="20220706 17:19:03.336"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${numbers}</var>
<arg>random.sample(range(1, ${response.json()["quantidade"]}),1)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.337" level="INFO">${numbers} = [44]</msg>
<status status="PASS" starttime="20220706 17:19:03.336" endtime="20220706 17:19:03.337"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_usuario}</var>
<arg>${response.json()["usuarios"][${numbers}[0]]["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.337" level="INFO">${id_usuario} = nefiiMwOLD3kT24D</msg>
<status status="PASS" starttime="20220706 17:19:03.337" endtime="20220706 17:19:03.338"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.338" level="INFO">${id_usuario} = nefiiMwOLD3kT24D</msg>
<status status="PASS" starttime="20220706 17:19:03.338" endtime="20220706 17:19:03.338"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.338" endtime="20220706 17:19:03.338"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.334" endtime="20220706 17:19:03.338"/>
</kw>
<kw name="GET Endpoint /usuarios por ID" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.340" level="INFO">GET Request : url=http://localhost:3000/usuarios/nefiiMwOLD3kT24D 
 path_url=/usuarios/nefiiMwOLD3kT24D 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.340" level="INFO">GET Response : url=http://localhost:3000/usuarios/nefiiMwOLD3kT24D 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '898bd71b-9de8-4383-be0f-7efe4d575f1f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '155', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "Chris Aguirre",
    "email": "joycehill@example.com",
    "password": "teste",
    "administrador": "false",
    "_id": "nefiiMwOLD3kT24D"
} 
 </msg>
<msg timestamp="20220706 17:19:03.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.338" endtime="20220706 17:19:03.340"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.340" endtime="20220706 17:19:03.340"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.340" endtime="20220706 17:19:03.341"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.338" endtime="20220706 17:19:03.341"/>
</kw>
<kw name="Alterar Dados Payload Email" library="usuarios_keywords">
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220706 17:19:03.341" level="INFO">${email} = omaldonado@example.net</msg>
<status status="PASS" starttime="20220706 17:19:03.341" endtime="20220706 17:19:03.341"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${response.json()["nome"]}</arg>
<arg>email=${email}</arg>
<arg>password=${response.json()["password"]}</arg>
<arg>administrador=${response.json()["administrador"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 17:19:03.342" level="INFO">${payload} = {'nome': 'Chris Aguirre', 'email': 'omaldonado@example.net', 'password': 'teste', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220706 17:19:03.341" endtime="20220706 17:19:03.342"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.342" endtime="20220706 17:19:03.342"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.343" level="INFO">${payload} = {'nome': 'Chris Aguirre', 'email': 'omaldonado@example.net', 'password': 'teste', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220706 17:19:03.342" endtime="20220706 17:19:03.343"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.341" endtime="20220706 17:19:03.343"/>
</kw>
<kw name="PUT Endpoint /usuarios" library="usuarios_keywords">
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.345" level="INFO">PUT Request : url=http://localhost:3000/usuarios/nefiiMwOLD3kT24D 
 path_url=/usuarios/nefiiMwOLD3kT24D 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '107', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Chris Aguirre", "email": "omaldonado@example.net", "password": "teste", "administrador": "false"}' 
 </msg>
<msg timestamp="20220706 17:19:03.345" level="INFO">PUT Response : url=http://localhost:3000/usuarios/nefiiMwOLD3kT24D 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e582e40e-ee52-4c99-b759-017daea8e325', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20220706 17:19:03.345" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.343" endtime="20220706 17:19:03.345"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.345" endtime="20220706 17:19:03.345"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.346" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.345" endtime="20220706 17:19:03.346"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.343" endtime="20220706 17:19:03.346"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.346" endtime="20220706 17:19:03.347"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.346" endtime="20220706 17:19:03.347"/>
</kw>
<kw name="Validar Se &quot;message&quot; Contem &quot;Registro alterado com sucesso&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.347" endtime="20220706 17:19:03.347"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.347" endtime="20220706 17:19:03.347"/>
</kw>
<tag>PUT</tag>
<tag>PUT_atualizar_email</tag>
<status status="PASS" starttime="20220706 17:19:03.334" endtime="20220706 17:19:03.347"/>
</test>
<test id="s1-t16" name="Cenário: PUT Atualizar Senha 200" line="127">
<kw name="Coletar ID Usuario Aleatorio" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.350" level="INFO">GET Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.350" level="INFO">GET Response : url=http://localhost:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7a8ef616-3ed3-4261-9f43-da66c171f981', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '12474', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 59,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Garrett Hoffman",
            "email": "heathernavarro@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "1YrNUFg67NujFkVr"
        },
        {
            "nome": "Bryan Aguilar",
            "email": "conleylori@example.org",
            "password": "&amp;9UPr",
            "administrador": "false",
            "_id": "1huYkTw4pgrTDcTJ"
        },
        {
            "nome": "Lauren Brown",
            "email": "ybennett@example.net",
            "password": "(N9Dv",
            "administrador": "true",
            "_id": "1nkJ8So16hb9jLP6"
        },
        {
            "nome": "Patricia Soto",
            "email": "vleon@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "34eyYGCPDeNwRVDH"
        },
        {
            "nome": "Meghan Orr",
            "email": "nkirk@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "3MvOuzoe5HcVvtZx"
        },
        {
            "nome": "Edwin Whitney",
            "email": "dmorales@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "3hiiroduALppqme6"
        },
        {
            "nome": "Jared Davis",
            "email": "david14@example.com",
            "password": "$1Bnn",
            "administrador": "true",
            "_id": "3oMwhgFYVzS2Tnai"
        },
        {
            "nome": "Ashley Garcia",
            "email": "tsanchez@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "4yVtXcE9HAuM81XK"
        },
        {
            "nome": "Patrick Krause",
            "email": "hgreen@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "6Viv3szSTs2E414T"
        },
        {
            "nome": "Fred Silva",
            "email": "rmills@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "6uTlIEDTY4tPG2NY"
        },
        {
            "nome": "Lisa Washington",
            "email": "ryan46@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "9ac1FG3y6V0zAxJe"
        },
        {
            "nome": "Davi luis",
            "email": "daviluis3@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "C8AvqUuxdkRE4l7K"
        },
        {
            "nome": "Jacob Turner",
            "email": "linda22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Dfb0wpiOiYE3OFiE"
        },
        {
            "nome": "Mary Patton",
            "email": "william71@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "EbFcSTgftrJy1uba"
        },
        {
            "nome": "William Stokes",
            "email": "smithkara@example.org",
            "password": "&amp;0WmY",
            "administrador": "true",
            "_id": "FrJGBoSo7Wn0Lpdu"
        },
        {
            "nome": "James Hernandez",
            "email": "jonesbrenda@example.com",
            "password": "(3Ibm",
            "administrador": "true",
            "_id": "GwfZ75MYS8RuIoNe"
        },
        {
            "nome": "Kelly Walker",
            "email": "gordondennis@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "IZwqoy15uk1nRURw"
        },
        {
            "nome": "Deborah Smith",
            "email": "wsimpson@example.net",
            "password": "+84St",
            "administrador": "true",
            "_id": "JAIfQc9Y7jdd1VOj"
        },
        {
            "nome": "Neymaru",
            "email": "fulano@qa.com.br",
            "password": "+2Ce8",
            "administrador": "true",
            "_id": "JJAwZmD0BGmmOavI"
        },
        {
            "nome": "Cazé",
            "email": "timothy39@example.net",
            "password": "+1AiH",
            "administrador": "true",
            "_id": "LBNTveEpMboFxKLp"
        },
        {
            "nome": "Sophia",
            "email": "Sophia_@qa.com",
            "password": "teste",
            "administrador": "false",
            "_id": "MypbABXqyjIiWamv"
        },
        {
            "nome": "William Carey",
            "email": "smithlisa@example.com",
            "password": "d^4Xm",
            "administrador": "true",
            "_id": "OdJ5yswAKeDh0RvI"
        },
        {
            "nome": "Bryan Larson",
            "email": "agilbert@example.org",
            "password": "$F3Tz",
            "administrador": "true",
            "_id": "PPw4iR5jZnVlE8UD"
        },
        {
            "nome": "Elizabeth Romero",
            "email": "leblanccassie@example.net",
            "password": "(*4Ud",
            "administrador": "true",
            "_id": "Qib9oETBywJ1LWNS"
        },
        {
            "nome": "Cody Adams",
            "email": "tbaker@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "RPUBl1zNkQBwYilz"
        },
        {
            "nome": "Brett Lewis",
            "email": "hamptondarryl@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "RfCSZupicTZLyPHv"
        },
        {
            "nome": "Jennifer Williams",
            "email": "probinson@example.org",
            "password": "*3Yfl",
            "administrador": "true",
            "_id": "TI7ypbgonQUp5Ki9"
        },
        {
            "nome": "John Gregory",
            "email": "zsmith@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "TqmKjbcOPAxIk2TX"
        },
        {
            "nome": "Nicholas Singleton",
            "email": "gilmorelisa@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Tz7VCr34EdGeTrMl"
        },
        {
            "nome": "Ryan Nelson",
            "email": "armstrongrita@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "ViliyyDZ5Wb5DUqI"
        },
        {
            "nome": "Charles Miles",
            "email": "julie74@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "YQaC6QQN3u5EkHiJ"
        },
        {
            "nome": "Wendy Ponce",
            "email": "xelliott@example.com",
            "password": "!F6Dm",
            "administrador": "true",
            "_id": "Z3ONAABtVcA6CUKX"
        },
        {
            "nome": "Yvette Young",
            "email": "ronaldinh9@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "ZBvcyIXYSEKQq9f9"
        },
        {
            "nome": "Jesus Butler",
            "email": "roysmith@example.com",
            "password": ")5B9u",
            "administrador": "true",
            "_id": "aI3a0u0wTf9S82Rt"
        },
        {
            "nome": "Danielle Frank",
            "email": "bryan90@example.org",
            "password": "%9Ija",
            "administrador": "true",
            "_id": "cH9igOkRlSKajqik"
        },
        {
            "nome": "Miss Michelle Villarreal",
            "email": "margaretkelly@example.com",
            "password": "N*0Ae",
            "administrador": "true",
            "_id": "d15FCfFp3a6ssvFn"
        },
        {
            "nome": "Joseph Ryan",
            "email": "roger38@example.org",
            "password": "$3NlS",
            "administrador": "true",
            "_id": "dKX9A9YWjknh6GBX"
        },
        {
            "nome": "Brittany Lara",
            "email": "stevensstephanie@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "fLnW3WziOY4hT6y4"
        },
        {
            "nome": "Kristen Holder",
            "email": "jlee@example.com",
            "password": "#5JoO",
            "administrador": "true",
            "_id": "hDSbtXkhlLtTcEgF"
        },
        {
            "nome": "James Davis",
            "email": "sdaniel@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "hUz4jiSuQYWUy1GS"
        },
        {
            "nome": "Robert Collins",
            "email": "walshryan@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "lvfhDVcRgVBVBEfz"
        },
        {
            "nome": "Richard Gomes",
            "email": "richard_@qa.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "m42DKtadITK7v6Kb"
        },
        {
            "nome": "Sophia Light",
            "email": "Sophia123@qa.com.br",
            "password": "(e1Ww",
            "administrador": "false",
            "_id": "mIHZzFvClk19pLM7"
        },
        {
            "nome": "Chris Aguirre",
            "email": "omaldonado@example.net",
            "password": "teste",
            "administrador": "false",
            "_id": "nefiiMwOLD3kT24D"
        },
        {
            "nome": "Kenneth Smith",
            "email": "toddjones@example.com",
            "password": "+0Pll",
            "administrador": "true",
            "_id": "oCwRwCVrDfLFbt7M"
        },
        {
            "nome": "Amy Rivera",
            "email": "james22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "qWR0ri4oJCzJeTCo"
        },
        {
            "nome": "Frank Castillo",
... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220706 17:19:03.350" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.348" endtime="20220706 17:19:03.350"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${numbers}</var>
<arg>random.sample(range(1, ${response.json()["quantidade"]}),1)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.350" level="INFO">${numbers} = [13]</msg>
<status status="PASS" starttime="20220706 17:19:03.350" endtime="20220706 17:19:03.350"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_usuario}</var>
<arg>${response.json()["usuarios"][${numbers}[0]]["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.351" level="INFO">${id_usuario} = Dfb0wpiOiYE3OFiE</msg>
<status status="PASS" starttime="20220706 17:19:03.350" endtime="20220706 17:19:03.351"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.351" level="INFO">${id_usuario} = Dfb0wpiOiYE3OFiE</msg>
<status status="PASS" starttime="20220706 17:19:03.351" endtime="20220706 17:19:03.351"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.351" endtime="20220706 17:19:03.351"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.348" endtime="20220706 17:19:03.351"/>
</kw>
<kw name="GET Endpoint /usuarios por ID" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.353" level="INFO">GET Request : url=http://localhost:3000/usuarios/Dfb0wpiOiYE3OFiE 
 path_url=/usuarios/Dfb0wpiOiYE3OFiE 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.353" level="INFO">GET Response : url=http://localhost:3000/usuarios/Dfb0wpiOiYE3OFiE 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c6f58347-7617-457a-8e6e-585096a0774a', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '151', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "Jacob Turner",
    "email": "linda22@example.org",
    "password": "teste",
    "administrador": "true",
    "_id": "Dfb0wpiOiYE3OFiE"
} 
 </msg>
<msg timestamp="20220706 17:19:03.353" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.351" endtime="20220706 17:19:03.353"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.353" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.353" endtime="20220706 17:19:03.353"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.353" endtime="20220706 17:19:03.354"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.351" endtime="20220706 17:19:03.354"/>
</kw>
<kw name="Alterar Dados Payload Senha" library="usuarios_keywords">
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<arg>length=5</arg>
<arg>special_chars=True</arg>
<arg>digits=True</arg>
<arg>upper_case=True</arg>
<arg>lower_case=True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220706 17:19:03.354" level="INFO">${senha} = )5Gkb</msg>
<status status="PASS" starttime="20220706 17:19:03.354" endtime="20220706 17:19:03.354"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${response.json()["nome"]}</arg>
<arg>email=${response.json()["email"]}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${response.json()["administrador"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 17:19:03.355" level="INFO">${payload} = {'nome': 'Jacob Turner', 'email': 'linda22@example.org', 'password': ')5Gkb', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.354" endtime="20220706 17:19:03.355"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.355" endtime="20220706 17:19:03.356"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.356" level="INFO">${payload} = {'nome': 'Jacob Turner', 'email': 'linda22@example.org', 'password': ')5Gkb', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.356" endtime="20220706 17:19:03.356"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.354" endtime="20220706 17:19:03.356"/>
</kw>
<kw name="PUT Endpoint /usuarios" library="usuarios_keywords">
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.358" level="INFO">PUT Request : url=http://localhost:3000/usuarios/Dfb0wpiOiYE3OFiE 
 path_url=/usuarios/Dfb0wpiOiYE3OFiE 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '102', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Jacob Turner", "email": "linda22@example.org", "password": ")5Gkb", "administrador": "true"}' 
 </msg>
<msg timestamp="20220706 17:19:03.358" level="INFO">PUT Response : url=http://localhost:3000/usuarios/Dfb0wpiOiYE3OFiE 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2934c4c7-5ee7-4338-84df-d41418f30dc6', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20220706 17:19:03.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.356" endtime="20220706 17:19:03.358"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.358" endtime="20220706 17:19:03.359"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.359" endtime="20220706 17:19:03.359"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.356" endtime="20220706 17:19:03.359"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.359" endtime="20220706 17:19:03.360"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.359" endtime="20220706 17:19:03.360"/>
</kw>
<kw name="Validar Se &quot;message&quot; Contem &quot;Registro alterado com sucesso&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.360" endtime="20220706 17:19:03.360"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.360" endtime="20220706 17:19:03.361"/>
</kw>
<tag>PUT</tag>
<tag>PUT_atualizar_senha</tag>
<status status="PASS" starttime="20220706 17:19:03.348" endtime="20220706 17:19:03.361"/>
</test>
<test id="s1-t17" name="Cenário: PUT Atualizar Administrador True 200" line="136">
<kw name="Coletar ID Usuario Aleatorio" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.363" level="INFO">GET Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.363" level="INFO">GET Response : url=http://localhost:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '46e45c9e-5cfe-40f9-a860-47a36f72fee6', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '12474', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 59,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Garrett Hoffman",
            "email": "heathernavarro@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "1YrNUFg67NujFkVr"
        },
        {
            "nome": "Bryan Aguilar",
            "email": "conleylori@example.org",
            "password": "&amp;9UPr",
            "administrador": "false",
            "_id": "1huYkTw4pgrTDcTJ"
        },
        {
            "nome": "Lauren Brown",
            "email": "ybennett@example.net",
            "password": "(N9Dv",
            "administrador": "true",
            "_id": "1nkJ8So16hb9jLP6"
        },
        {
            "nome": "Patricia Soto",
            "email": "vleon@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "34eyYGCPDeNwRVDH"
        },
        {
            "nome": "Meghan Orr",
            "email": "nkirk@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "3MvOuzoe5HcVvtZx"
        },
        {
            "nome": "Edwin Whitney",
            "email": "dmorales@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "3hiiroduALppqme6"
        },
        {
            "nome": "Jared Davis",
            "email": "david14@example.com",
            "password": "$1Bnn",
            "administrador": "true",
            "_id": "3oMwhgFYVzS2Tnai"
        },
        {
            "nome": "Ashley Garcia",
            "email": "tsanchez@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "4yVtXcE9HAuM81XK"
        },
        {
            "nome": "Patrick Krause",
            "email": "hgreen@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "6Viv3szSTs2E414T"
        },
        {
            "nome": "Fred Silva",
            "email": "rmills@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "6uTlIEDTY4tPG2NY"
        },
        {
            "nome": "Lisa Washington",
            "email": "ryan46@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "9ac1FG3y6V0zAxJe"
        },
        {
            "nome": "Davi luis",
            "email": "daviluis3@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "C8AvqUuxdkRE4l7K"
        },
        {
            "nome": "Jacob Turner",
            "email": "linda22@example.org",
            "password": ")5Gkb",
            "administrador": "true",
            "_id": "Dfb0wpiOiYE3OFiE"
        },
        {
            "nome": "Mary Patton",
            "email": "william71@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "EbFcSTgftrJy1uba"
        },
        {
            "nome": "William Stokes",
            "email": "smithkara@example.org",
            "password": "&amp;0WmY",
            "administrador": "true",
            "_id": "FrJGBoSo7Wn0Lpdu"
        },
        {
            "nome": "James Hernandez",
            "email": "jonesbrenda@example.com",
            "password": "(3Ibm",
            "administrador": "true",
            "_id": "GwfZ75MYS8RuIoNe"
        },
        {
            "nome": "Kelly Walker",
            "email": "gordondennis@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "IZwqoy15uk1nRURw"
        },
        {
            "nome": "Deborah Smith",
            "email": "wsimpson@example.net",
            "password": "+84St",
            "administrador": "true",
            "_id": "JAIfQc9Y7jdd1VOj"
        },
        {
            "nome": "Neymaru",
            "email": "fulano@qa.com.br",
            "password": "+2Ce8",
            "administrador": "true",
            "_id": "JJAwZmD0BGmmOavI"
        },
        {
            "nome": "Cazé",
            "email": "timothy39@example.net",
            "password": "+1AiH",
            "administrador": "true",
            "_id": "LBNTveEpMboFxKLp"
        },
        {
            "nome": "Sophia",
            "email": "Sophia_@qa.com",
            "password": "teste",
            "administrador": "false",
            "_id": "MypbABXqyjIiWamv"
        },
        {
            "nome": "William Carey",
            "email": "smithlisa@example.com",
            "password": "d^4Xm",
            "administrador": "true",
            "_id": "OdJ5yswAKeDh0RvI"
        },
        {
            "nome": "Bryan Larson",
            "email": "agilbert@example.org",
            "password": "$F3Tz",
            "administrador": "true",
            "_id": "PPw4iR5jZnVlE8UD"
        },
        {
            "nome": "Elizabeth Romero",
            "email": "leblanccassie@example.net",
            "password": "(*4Ud",
            "administrador": "true",
            "_id": "Qib9oETBywJ1LWNS"
        },
        {
            "nome": "Cody Adams",
            "email": "tbaker@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "RPUBl1zNkQBwYilz"
        },
        {
            "nome": "Brett Lewis",
            "email": "hamptondarryl@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "RfCSZupicTZLyPHv"
        },
        {
            "nome": "Jennifer Williams",
            "email": "probinson@example.org",
            "password": "*3Yfl",
            "administrador": "true",
            "_id": "TI7ypbgonQUp5Ki9"
        },
        {
            "nome": "John Gregory",
            "email": "zsmith@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "TqmKjbcOPAxIk2TX"
        },
        {
            "nome": "Nicholas Singleton",
            "email": "gilmorelisa@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Tz7VCr34EdGeTrMl"
        },
        {
            "nome": "Ryan Nelson",
            "email": "armstrongrita@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "ViliyyDZ5Wb5DUqI"
        },
        {
            "nome": "Charles Miles",
            "email": "julie74@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "YQaC6QQN3u5EkHiJ"
        },
        {
            "nome": "Wendy Ponce",
            "email": "xelliott@example.com",
            "password": "!F6Dm",
            "administrador": "true",
            "_id": "Z3ONAABtVcA6CUKX"
        },
        {
            "nome": "Yvette Young",
            "email": "ronaldinh9@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "ZBvcyIXYSEKQq9f9"
        },
        {
            "nome": "Jesus Butler",
            "email": "roysmith@example.com",
            "password": ")5B9u",
            "administrador": "true",
            "_id": "aI3a0u0wTf9S82Rt"
        },
        {
            "nome": "Danielle Frank",
            "email": "bryan90@example.org",
            "password": "%9Ija",
            "administrador": "true",
            "_id": "cH9igOkRlSKajqik"
        },
        {
            "nome": "Miss Michelle Villarreal",
            "email": "margaretkelly@example.com",
            "password": "N*0Ae",
            "administrador": "true",
            "_id": "d15FCfFp3a6ssvFn"
        },
        {
            "nome": "Joseph Ryan",
            "email": "roger38@example.org",
            "password": "$3NlS",
            "administrador": "true",
            "_id": "dKX9A9YWjknh6GBX"
        },
        {
            "nome": "Brittany Lara",
            "email": "stevensstephanie@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "fLnW3WziOY4hT6y4"
        },
        {
            "nome": "Kristen Holder",
            "email": "jlee@example.com",
            "password": "#5JoO",
            "administrador": "true",
            "_id": "hDSbtXkhlLtTcEgF"
        },
        {
            "nome": "James Davis",
            "email": "sdaniel@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "hUz4jiSuQYWUy1GS"
        },
        {
            "nome": "Robert Collins",
            "email": "walshryan@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "lvfhDVcRgVBVBEfz"
        },
        {
            "nome": "Richard Gomes",
            "email": "richard_@qa.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "m42DKtadITK7v6Kb"
        },
        {
            "nome": "Sophia Light",
            "email": "Sophia123@qa.com.br",
            "password": "(e1Ww",
            "administrador": "false",
            "_id": "mIHZzFvClk19pLM7"
        },
        {
            "nome": "Chris Aguirre",
            "email": "omaldonado@example.net",
            "password": "teste",
            "administrador": "false",
            "_id": "nefiiMwOLD3kT24D"
        },
        {
            "nome": "Kenneth Smith",
            "email": "toddjones@example.com",
            "password": "+0Pll",
            "administrador": "true",
            "_id": "oCwRwCVrDfLFbt7M"
        },
        {
            "nome": "Amy Rivera",
            "email": "james22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "qWR0ri4oJCzJeTCo"
        },
        {
            "nome": "Frank Castillo",
... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220706 17:19:03.364" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.361" endtime="20220706 17:19:03.364"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${numbers}</var>
<arg>random.sample(range(1, ${response.json()["quantidade"]}),1)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.364" level="INFO">${numbers} = [39]</msg>
<status status="PASS" starttime="20220706 17:19:03.364" endtime="20220706 17:19:03.364"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_usuario}</var>
<arg>${response.json()["usuarios"][${numbers}[0]]["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.365" level="INFO">${id_usuario} = hDSbtXkhlLtTcEgF</msg>
<status status="PASS" starttime="20220706 17:19:03.364" endtime="20220706 17:19:03.365"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.365" level="INFO">${id_usuario} = hDSbtXkhlLtTcEgF</msg>
<status status="PASS" starttime="20220706 17:19:03.365" endtime="20220706 17:19:03.365"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.365" endtime="20220706 17:19:03.365"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.361" endtime="20220706 17:19:03.365"/>
</kw>
<kw name="GET Endpoint /usuarios por ID" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.367" level="INFO">GET Request : url=http://localhost:3000/usuarios/hDSbtXkhlLtTcEgF 
 path_url=/usuarios/hDSbtXkhlLtTcEgF 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.367" level="INFO">GET Response : url=http://localhost:3000/usuarios/hDSbtXkhlLtTcEgF 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f1f8c3e3-cab9-4e10-a182-861a13aa68e6', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '150', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "Kristen Holder",
    "email": "jlee@example.com",
    "password": "#5JoO",
    "administrador": "true",
    "_id": "hDSbtXkhlLtTcEgF"
} 
 </msg>
<msg timestamp="20220706 17:19:03.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.365" endtime="20220706 17:19:03.367"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.367" endtime="20220706 17:19:03.367"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.367" endtime="20220706 17:19:03.367"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.365" endtime="20220706 17:19:03.367"/>
</kw>
<kw name="Alterar Dados Payload Administrador True" library="usuarios_keywords">
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<arg>length=5</arg>
<arg>special_chars=True</arg>
<arg>digits=True</arg>
<arg>upper_case=True</arg>
<arg>lower_case=True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220706 17:19:03.368" level="INFO">${senha} = $8SgJ</msg>
<status status="PASS" starttime="20220706 17:19:03.368" endtime="20220706 17:19:03.368"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${response.json()["nome"]}</arg>
<arg>email=${response.json()["email"]}</arg>
<arg>password=${response.json()["password"]}</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 17:19:03.369" level="INFO">${payload} = {'nome': 'Kristen Holder', 'email': 'jlee@example.com', 'password': '#5JoO', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.368" endtime="20220706 17:19:03.369"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.369" endtime="20220706 17:19:03.369"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.369" level="INFO">${payload} = {'nome': 'Kristen Holder', 'email': 'jlee@example.com', 'password': '#5JoO', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.369" endtime="20220706 17:19:03.369"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.368" endtime="20220706 17:19:03.370"/>
</kw>
<kw name="PUT Endpoint /usuarios" library="usuarios_keywords">
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.374" level="INFO">PUT Request : url=http://localhost:3000/usuarios/hDSbtXkhlLtTcEgF 
 path_url=/usuarios/hDSbtXkhlLtTcEgF 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '101', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Kristen Holder", "email": "jlee@example.com", "password": "#5JoO", "administrador": "true"}' 
 </msg>
<msg timestamp="20220706 17:19:03.374" level="INFO">PUT Response : url=http://localhost:3000/usuarios/hDSbtXkhlLtTcEgF 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '97ec6b42-0617-4f41-8662-75d4fdd8868f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20220706 17:19:03.374" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.370" endtime="20220706 17:19:03.374"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.374" endtime="20220706 17:19:03.375"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.375" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.375" endtime="20220706 17:19:03.375"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.370" endtime="20220706 17:19:03.375"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.375" endtime="20220706 17:19:03.376"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.375" endtime="20220706 17:19:03.376"/>
</kw>
<kw name="Validar Se &quot;message&quot; Contem &quot;Registro alterado com sucesso&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.376" endtime="20220706 17:19:03.377"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.376" endtime="20220706 17:19:03.377"/>
</kw>
<tag>PUT</tag>
<tag>PUT_atualizar_adm_true</tag>
<status status="PASS" starttime="20220706 17:19:03.361" endtime="20220706 17:19:03.377"/>
</test>
<test id="s1-t18" name="Cenário: PUT Atualizar Administrador False 200" line="145">
<kw name="Coletar ID Usuario Aleatorio" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.379" level="INFO">GET Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.379" level="INFO">GET Response : url=http://localhost:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a7a98210-32b6-4a23-8418-0ec7fe774a34', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '12474', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 59,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Garrett Hoffman",
            "email": "heathernavarro@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "1YrNUFg67NujFkVr"
        },
        {
            "nome": "Bryan Aguilar",
            "email": "conleylori@example.org",
            "password": "&amp;9UPr",
            "administrador": "false",
            "_id": "1huYkTw4pgrTDcTJ"
        },
        {
            "nome": "Lauren Brown",
            "email": "ybennett@example.net",
            "password": "(N9Dv",
            "administrador": "true",
            "_id": "1nkJ8So16hb9jLP6"
        },
        {
            "nome": "Patricia Soto",
            "email": "vleon@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "34eyYGCPDeNwRVDH"
        },
        {
            "nome": "Meghan Orr",
            "email": "nkirk@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "3MvOuzoe5HcVvtZx"
        },
        {
            "nome": "Edwin Whitney",
            "email": "dmorales@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "3hiiroduALppqme6"
        },
        {
            "nome": "Jared Davis",
            "email": "david14@example.com",
            "password": "$1Bnn",
            "administrador": "true",
            "_id": "3oMwhgFYVzS2Tnai"
        },
        {
            "nome": "Ashley Garcia",
            "email": "tsanchez@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "4yVtXcE9HAuM81XK"
        },
        {
            "nome": "Patrick Krause",
            "email": "hgreen@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "6Viv3szSTs2E414T"
        },
        {
            "nome": "Fred Silva",
            "email": "rmills@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "6uTlIEDTY4tPG2NY"
        },
        {
            "nome": "Lisa Washington",
            "email": "ryan46@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "9ac1FG3y6V0zAxJe"
        },
        {
            "nome": "Davi luis",
            "email": "daviluis3@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "C8AvqUuxdkRE4l7K"
        },
        {
            "nome": "Jacob Turner",
            "email": "linda22@example.org",
            "password": ")5Gkb",
            "administrador": "true",
            "_id": "Dfb0wpiOiYE3OFiE"
        },
        {
            "nome": "Mary Patton",
            "email": "william71@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "EbFcSTgftrJy1uba"
        },
        {
            "nome": "William Stokes",
            "email": "smithkara@example.org",
            "password": "&amp;0WmY",
            "administrador": "true",
            "_id": "FrJGBoSo7Wn0Lpdu"
        },
        {
            "nome": "James Hernandez",
            "email": "jonesbrenda@example.com",
            "password": "(3Ibm",
            "administrador": "true",
            "_id": "GwfZ75MYS8RuIoNe"
        },
        {
            "nome": "Kelly Walker",
            "email": "gordondennis@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "IZwqoy15uk1nRURw"
        },
        {
            "nome": "Deborah Smith",
            "email": "wsimpson@example.net",
            "password": "+84St",
            "administrador": "true",
            "_id": "JAIfQc9Y7jdd1VOj"
        },
        {
            "nome": "Neymaru",
            "email": "fulano@qa.com.br",
            "password": "+2Ce8",
            "administrador": "true",
            "_id": "JJAwZmD0BGmmOavI"
        },
        {
            "nome": "Cazé",
            "email": "timothy39@example.net",
            "password": "+1AiH",
            "administrador": "true",
            "_id": "LBNTveEpMboFxKLp"
        },
        {
            "nome": "Sophia",
            "email": "Sophia_@qa.com",
            "password": "teste",
            "administrador": "false",
            "_id": "MypbABXqyjIiWamv"
        },
        {
            "nome": "William Carey",
            "email": "smithlisa@example.com",
            "password": "d^4Xm",
            "administrador": "true",
            "_id": "OdJ5yswAKeDh0RvI"
        },
        {
            "nome": "Bryan Larson",
            "email": "agilbert@example.org",
            "password": "$F3Tz",
            "administrador": "true",
            "_id": "PPw4iR5jZnVlE8UD"
        },
        {
            "nome": "Elizabeth Romero",
            "email": "leblanccassie@example.net",
            "password": "(*4Ud",
            "administrador": "true",
            "_id": "Qib9oETBywJ1LWNS"
        },
        {
            "nome": "Cody Adams",
            "email": "tbaker@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "RPUBl1zNkQBwYilz"
        },
        {
            "nome": "Brett Lewis",
            "email": "hamptondarryl@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "RfCSZupicTZLyPHv"
        },
        {
            "nome": "Jennifer Williams",
            "email": "probinson@example.org",
            "password": "*3Yfl",
            "administrador": "true",
            "_id": "TI7ypbgonQUp5Ki9"
        },
        {
            "nome": "John Gregory",
            "email": "zsmith@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "TqmKjbcOPAxIk2TX"
        },
        {
            "nome": "Nicholas Singleton",
            "email": "gilmorelisa@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Tz7VCr34EdGeTrMl"
        },
        {
            "nome": "Ryan Nelson",
            "email": "armstrongrita@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "ViliyyDZ5Wb5DUqI"
        },
        {
            "nome": "Charles Miles",
            "email": "julie74@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "YQaC6QQN3u5EkHiJ"
        },
        {
            "nome": "Wendy Ponce",
            "email": "xelliott@example.com",
            "password": "!F6Dm",
            "administrador": "true",
            "_id": "Z3ONAABtVcA6CUKX"
        },
        {
            "nome": "Yvette Young",
            "email": "ronaldinh9@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "ZBvcyIXYSEKQq9f9"
        },
        {
            "nome": "Jesus Butler",
            "email": "roysmith@example.com",
            "password": ")5B9u",
            "administrador": "true",
            "_id": "aI3a0u0wTf9S82Rt"
        },
        {
            "nome": "Danielle Frank",
            "email": "bryan90@example.org",
            "password": "%9Ija",
            "administrador": "true",
            "_id": "cH9igOkRlSKajqik"
        },
        {
            "nome": "Miss Michelle Villarreal",
            "email": "margaretkelly@example.com",
            "password": "N*0Ae",
            "administrador": "true",
            "_id": "d15FCfFp3a6ssvFn"
        },
        {
            "nome": "Joseph Ryan",
            "email": "roger38@example.org",
            "password": "$3NlS",
            "administrador": "true",
            "_id": "dKX9A9YWjknh6GBX"
        },
        {
            "nome": "Brittany Lara",
            "email": "stevensstephanie@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "fLnW3WziOY4hT6y4"
        },
        {
            "nome": "Kristen Holder",
            "email": "jlee@example.com",
            "password": "#5JoO",
            "administrador": "true",
            "_id": "hDSbtXkhlLtTcEgF"
        },
        {
            "nome": "James Davis",
            "email": "sdaniel@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "hUz4jiSuQYWUy1GS"
        },
        {
            "nome": "Robert Collins",
            "email": "walshryan@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "lvfhDVcRgVBVBEfz"
        },
        {
            "nome": "Richard Gomes",
            "email": "richard_@qa.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "m42DKtadITK7v6Kb"
        },
        {
            "nome": "Sophia Light",
            "email": "Sophia123@qa.com.br",
            "password": "(e1Ww",
            "administrador": "false",
            "_id": "mIHZzFvClk19pLM7"
        },
        {
            "nome": "Chris Aguirre",
            "email": "omaldonado@example.net",
            "password": "teste",
            "administrador": "false",
            "_id": "nefiiMwOLD3kT24D"
        },
        {
            "nome": "Kenneth Smith",
            "email": "toddjones@example.com",
            "password": "+0Pll",
            "administrador": "true",
            "_id": "oCwRwCVrDfLFbt7M"
        },
        {
            "nome": "Amy Rivera",
            "email": "james22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "qWR0ri4oJCzJeTCo"
        },
        {
            "nome": "Frank Castillo",
... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220706 17:19:03.379" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.377" endtime="20220706 17:19:03.379"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${numbers}</var>
<arg>random.sample(range(1, ${response.json()["quantidade"]}),1)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.380" level="INFO">${numbers} = [20]</msg>
<status status="PASS" starttime="20220706 17:19:03.379" endtime="20220706 17:19:03.380"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_usuario}</var>
<arg>${response.json()["usuarios"][${numbers}[0]]["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.380" level="INFO">${id_usuario} = LBNTveEpMboFxKLp</msg>
<status status="PASS" starttime="20220706 17:19:03.380" endtime="20220706 17:19:03.380"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.380" level="INFO">${id_usuario} = LBNTveEpMboFxKLp</msg>
<status status="PASS" starttime="20220706 17:19:03.380" endtime="20220706 17:19:03.380"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.380" endtime="20220706 17:19:03.381"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.377" endtime="20220706 17:19:03.381"/>
</kw>
<kw name="GET Endpoint /usuarios por ID" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.385" level="INFO">GET Request : url=http://localhost:3000/usuarios/LBNTveEpMboFxKLp 
 path_url=/usuarios/LBNTveEpMboFxKLp 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.385" level="INFO">GET Response : url=http://localhost:3000/usuarios/LBNTveEpMboFxKLp 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '464f6f74-0813-484b-ace7-44c6bee30db6', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '146', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "Cazé",
    "email": "timothy39@example.net",
    "password": "+1AiH",
    "administrador": "true",
    "_id": "LBNTveEpMboFxKLp"
} 
 </msg>
<msg timestamp="20220706 17:19:03.385" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.381" endtime="20220706 17:19:03.385"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.385" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.385" endtime="20220706 17:19:03.385"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.385" endtime="20220706 17:19:03.386"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.381" endtime="20220706 17:19:03.386"/>
</kw>
<kw name="Alterar Dados Payload Administrador False" library="usuarios_keywords">
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<arg>length=5</arg>
<arg>special_chars=True</arg>
<arg>digits=True</arg>
<arg>upper_case=True</arg>
<arg>lower_case=True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220706 17:19:03.386" level="INFO">${senha} = $F0Ea</msg>
<status status="PASS" starttime="20220706 17:19:03.386" endtime="20220706 17:19:03.386"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${response.json()["nome"]}</arg>
<arg>email=${response.json()["email"]}</arg>
<arg>password=${response.json()["password"]}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 17:19:03.387" level="INFO">${payload} = {'nome': 'Cazé', 'email': 'timothy39@example.net', 'password': '+1AiH', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220706 17:19:03.386" endtime="20220706 17:19:03.387"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.387" endtime="20220706 17:19:03.388"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.388" level="INFO">${payload} = {'nome': 'Cazé', 'email': 'timothy39@example.net', 'password': '+1AiH', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220706 17:19:03.388" endtime="20220706 17:19:03.388"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.386" endtime="20220706 17:19:03.388"/>
</kw>
<kw name="PUT Endpoint /usuarios" library="usuarios_keywords">
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.390" level="INFO">PUT Request : url=http://localhost:3000/usuarios/LBNTveEpMboFxKLp 
 path_url=/usuarios/LBNTveEpMboFxKLp 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '102', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Caz\\u00e9", "email": "timothy39@example.net", "password": "+1AiH", "administrador": "false"}' 
 </msg>
<msg timestamp="20220706 17:19:03.390" level="INFO">PUT Response : url=http://localhost:3000/usuarios/LBNTveEpMboFxKLp 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c9ca9e04-e1a1-4ec1-b729-bdf1e765ce2d', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20220706 17:19:03.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.388" endtime="20220706 17:19:03.390"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.391" endtime="20220706 17:19:03.391"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.392" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.391" endtime="20220706 17:19:03.392"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.388" endtime="20220706 17:19:03.392"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.392" endtime="20220706 17:19:03.393"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.392" endtime="20220706 17:19:03.393"/>
</kw>
<kw name="Validar Se &quot;message&quot; Contem &quot;Registro alterado com sucesso&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.393" endtime="20220706 17:19:03.393"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.393" endtime="20220706 17:19:03.394"/>
</kw>
<tag>PUT</tag>
<tag>PUT_atualizar_adm_false</tag>
<status status="PASS" starttime="20220706 17:19:03.377" endtime="20220706 17:19:03.394"/>
</test>
<test id="s1-t19" name="Cenário: PUT Email Usado 400" line="154">
<kw name="Pegar Dados Usuarios Estatico &quot;user_email_usado&quot;" library="usuarios_keywords" sourcename="Pegar Dados Usuarios Estatico &quot;${user}&quot;">
<kw name="Importar Json Estatico" library="common">
<var>${json}</var>
<arg>json_usuario.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/statics/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220706 17:19:03.395" level="INFO" html="true">Getting file '&lt;a href="file://D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json"&gt;D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json&lt;/a&gt;'.</msg>
<msg timestamp="20220706 17:19:03.395" level="INFO">${arquivo} = {
    "user_valido":{
        "nome": "Alberto Junior",
        "email": "betinho3@qa.com",
        "password": "teste123",
        "administrador": "true"
    },
    "user_invalido":{
        "nome":...</msg>
<status status="PASS" starttime="20220706 17:19:03.395" endtime="20220706 17:19:03.395"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.395" level="INFO">${data} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.395" endtime="20220706 17:19:03.395"/>
</kw>
<msg timestamp="20220706 17:19:03.395" level="INFO">${json} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.395" endtime="20220706 17:19:03.395"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${payload}</var>
<arg>${json["${user}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.396" level="INFO">${payload} = {'nome': 'Neymar Jr', 'email': 'fulano@qa.com.br', 'password': 'teste', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.396" endtime="20220706 17:19:03.396"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.396" endtime="20220706 17:19:03.396"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.396" level="INFO">${payload} = {'nome': 'Neymar Jr', 'email': 'fulano@qa.com.br', 'password': 'teste', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.396" endtime="20220706 17:19:03.396"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.394" endtime="20220706 17:19:03.396"/>
</kw>
<kw name="Coletar ID Usuario Aleatorio" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.398" level="INFO">GET Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.398" level="INFO">GET Response : url=http://localhost:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e1c6ffbd-db38-4257-9cd1-27940153fb60', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '12475', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 59,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Garrett Hoffman",
            "email": "heathernavarro@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "1YrNUFg67NujFkVr"
        },
        {
            "nome": "Bryan Aguilar",
            "email": "conleylori@example.org",
            "password": "&amp;9UPr",
            "administrador": "false",
            "_id": "1huYkTw4pgrTDcTJ"
        },
        {
            "nome": "Lauren Brown",
            "email": "ybennett@example.net",
            "password": "(N9Dv",
            "administrador": "true",
            "_id": "1nkJ8So16hb9jLP6"
        },
        {
            "nome": "Patricia Soto",
            "email": "vleon@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "34eyYGCPDeNwRVDH"
        },
        {
            "nome": "Meghan Orr",
            "email": "nkirk@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "3MvOuzoe5HcVvtZx"
        },
        {
            "nome": "Edwin Whitney",
            "email": "dmorales@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "3hiiroduALppqme6"
        },
        {
            "nome": "Jared Davis",
            "email": "david14@example.com",
            "password": "$1Bnn",
            "administrador": "true",
            "_id": "3oMwhgFYVzS2Tnai"
        },
        {
            "nome": "Ashley Garcia",
            "email": "tsanchez@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "4yVtXcE9HAuM81XK"
        },
        {
            "nome": "Patrick Krause",
            "email": "hgreen@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "6Viv3szSTs2E414T"
        },
        {
            "nome": "Fred Silva",
            "email": "rmills@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "6uTlIEDTY4tPG2NY"
        },
        {
            "nome": "Lisa Washington",
            "email": "ryan46@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "9ac1FG3y6V0zAxJe"
        },
        {
            "nome": "Davi luis",
            "email": "daviluis3@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "C8AvqUuxdkRE4l7K"
        },
        {
            "nome": "Jacob Turner",
            "email": "linda22@example.org",
            "password": ")5Gkb",
            "administrador": "true",
            "_id": "Dfb0wpiOiYE3OFiE"
        },
        {
            "nome": "Mary Patton",
            "email": "william71@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "EbFcSTgftrJy1uba"
        },
        {
            "nome": "William Stokes",
            "email": "smithkara@example.org",
            "password": "&amp;0WmY",
            "administrador": "true",
            "_id": "FrJGBoSo7Wn0Lpdu"
        },
        {
            "nome": "James Hernandez",
            "email": "jonesbrenda@example.com",
            "password": "(3Ibm",
            "administrador": "true",
            "_id": "GwfZ75MYS8RuIoNe"
        },
        {
            "nome": "Kelly Walker",
            "email": "gordondennis@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "IZwqoy15uk1nRURw"
        },
        {
            "nome": "Deborah Smith",
            "email": "wsimpson@example.net",
            "password": "+84St",
            "administrador": "true",
            "_id": "JAIfQc9Y7jdd1VOj"
        },
        {
            "nome": "Neymaru",
            "email": "fulano@qa.com.br",
            "password": "+2Ce8",
            "administrador": "true",
            "_id": "JJAwZmD0BGmmOavI"
        },
        {
            "nome": "Cazé",
            "email": "timothy39@example.net",
            "password": "+1AiH",
            "administrador": "false",
            "_id": "LBNTveEpMboFxKLp"
        },
        {
            "nome": "Sophia",
            "email": "Sophia_@qa.com",
            "password": "teste",
            "administrador": "false",
            "_id": "MypbABXqyjIiWamv"
        },
        {
            "nome": "William Carey",
            "email": "smithlisa@example.com",
            "password": "d^4Xm",
            "administrador": "true",
            "_id": "OdJ5yswAKeDh0RvI"
        },
        {
            "nome": "Bryan Larson",
            "email": "agilbert@example.org",
            "password": "$F3Tz",
            "administrador": "true",
            "_id": "PPw4iR5jZnVlE8UD"
        },
        {
            "nome": "Elizabeth Romero",
            "email": "leblanccassie@example.net",
            "password": "(*4Ud",
            "administrador": "true",
            "_id": "Qib9oETBywJ1LWNS"
        },
        {
            "nome": "Cody Adams",
            "email": "tbaker@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "RPUBl1zNkQBwYilz"
        },
        {
            "nome": "Brett Lewis",
            "email": "hamptondarryl@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "RfCSZupicTZLyPHv"
        },
        {
            "nome": "Jennifer Williams",
            "email": "probinson@example.org",
            "password": "*3Yfl",
            "administrador": "true",
            "_id": "TI7ypbgonQUp5Ki9"
        },
        {
            "nome": "John Gregory",
            "email": "zsmith@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "TqmKjbcOPAxIk2TX"
        },
        {
            "nome": "Nicholas Singleton",
            "email": "gilmorelisa@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Tz7VCr34EdGeTrMl"
        },
        {
            "nome": "Ryan Nelson",
            "email": "armstrongrita@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "ViliyyDZ5Wb5DUqI"
        },
        {
            "nome": "Charles Miles",
            "email": "julie74@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "YQaC6QQN3u5EkHiJ"
        },
        {
            "nome": "Wendy Ponce",
            "email": "xelliott@example.com",
            "password": "!F6Dm",
            "administrador": "true",
            "_id": "Z3ONAABtVcA6CUKX"
        },
        {
            "nome": "Yvette Young",
            "email": "ronaldinh9@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "ZBvcyIXYSEKQq9f9"
        },
        {
            "nome": "Jesus Butler",
            "email": "roysmith@example.com",
            "password": ")5B9u",
            "administrador": "true",
            "_id": "aI3a0u0wTf9S82Rt"
        },
        {
            "nome": "Danielle Frank",
            "email": "bryan90@example.org",
            "password": "%9Ija",
            "administrador": "true",
            "_id": "cH9igOkRlSKajqik"
        },
        {
            "nome": "Miss Michelle Villarreal",
            "email": "margaretkelly@example.com",
            "password": "N*0Ae",
            "administrador": "true",
            "_id": "d15FCfFp3a6ssvFn"
        },
        {
            "nome": "Joseph Ryan",
            "email": "roger38@example.org",
            "password": "$3NlS",
            "administrador": "true",
            "_id": "dKX9A9YWjknh6GBX"
        },
        {
            "nome": "Brittany Lara",
            "email": "stevensstephanie@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "fLnW3WziOY4hT6y4"
        },
        {
            "nome": "Kristen Holder",
            "email": "jlee@example.com",
            "password": "#5JoO",
            "administrador": "true",
            "_id": "hDSbtXkhlLtTcEgF"
        },
        {
            "nome": "James Davis",
            "email": "sdaniel@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "hUz4jiSuQYWUy1GS"
        },
        {
            "nome": "Robert Collins",
            "email": "walshryan@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "lvfhDVcRgVBVBEfz"
        },
        {
            "nome": "Richard Gomes",
            "email": "richard_@qa.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "m42DKtadITK7v6Kb"
        },
        {
            "nome": "Sophia Light",
            "email": "Sophia123@qa.com.br",
            "password": "(e1Ww",
            "administrador": "false",
            "_id": "mIHZzFvClk19pLM7"
        },
        {
            "nome": "Chris Aguirre",
            "email": "omaldonado@example.net",
            "password": "teste",
            "administrador": "false",
            "_id": "nefiiMwOLD3kT24D"
        },
        {
            "nome": "Kenneth Smith",
            "email": "toddjones@example.com",
            "password": "+0Pll",
            "administrador": "true",
            "_id": "oCwRwCVrDfLFbt7M"
        },
        {
            "nome": "Amy Rivera",
            "email": "james22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "qWR0ri4oJCzJeTCo"
        },
        {
            "nome": "Frank Castillo",... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220706 17:19:03.399" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.397" endtime="20220706 17:19:03.399"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${numbers}</var>
<arg>random.sample(range(1, ${response.json()["quantidade"]}),1)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.399" level="INFO">${numbers} = [16]</msg>
<status status="PASS" starttime="20220706 17:19:03.399" endtime="20220706 17:19:03.399"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_usuario}</var>
<arg>${response.json()["usuarios"][${numbers}[0]]["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.400" level="INFO">${id_usuario} = GwfZ75MYS8RuIoNe</msg>
<status status="PASS" starttime="20220706 17:19:03.399" endtime="20220706 17:19:03.400"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.400" level="INFO">${id_usuario} = GwfZ75MYS8RuIoNe</msg>
<status status="PASS" starttime="20220706 17:19:03.400" endtime="20220706 17:19:03.400"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.400" endtime="20220706 17:19:03.400"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.397" endtime="20220706 17:19:03.400"/>
</kw>
<kw name="PUT Endpoint /usuarios" library="usuarios_keywords">
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.402" level="INFO">PUT Request : url=http://localhost:3000/usuarios/GwfZ75MYS8RuIoNe 
 path_url=/usuarios/GwfZ75MYS8RuIoNe 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '96', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Neymar Jr", "email": "fulano@qa.com.br", "password": "teste", "administrador": "true"}' 
 </msg>
<msg timestamp="20220706 17:19:03.402" level="INFO">PUT Response : url=http://localhost:3000/usuarios/GwfZ75MYS8RuIoNe 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '68c47217-6da1-44ef-8427-679811a1dec1', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg timestamp="20220706 17:19:03.403" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.401" endtime="20220706 17:19:03.403"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.403" endtime="20220706 17:19:03.403"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.403" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.403" endtime="20220706 17:19:03.403"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.401" endtime="20220706 17:19:03.403"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.404" endtime="20220706 17:19:03.404"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.403" endtime="20220706 17:19:03.404"/>
</kw>
<kw name="Validar Se &quot;message&quot; Contem &quot;Este email já está sendo usado&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.404" endtime="20220706 17:19:03.405"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.404" endtime="20220706 17:19:03.405"/>
</kw>
<tag>PUT_email_usado PUT</tag>
<status status="PASS" starttime="20220706 17:19:03.394" endtime="20220706 17:19:03.405"/>
</test>
<test id="s1-t20" name="Cenário: PUT Editar Dados Invalidos 400" line="162">
<kw name="Pegar Dados Usuarios Estatico &quot;user_invalido&quot;" library="usuarios_keywords" sourcename="Pegar Dados Usuarios Estatico &quot;${user}&quot;">
<kw name="Importar Json Estatico" library="common">
<var>${json}</var>
<arg>json_usuario.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/statics/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220706 17:19:03.406" level="INFO" html="true">Getting file '&lt;a href="file://D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json"&gt;D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json&lt;/a&gt;'.</msg>
<msg timestamp="20220706 17:19:03.406" level="INFO">${arquivo} = {
    "user_valido":{
        "nome": "Alberto Junior",
        "email": "betinho3@qa.com",
        "password": "teste123",
        "administrador": "true"
    },
    "user_invalido":{
        "nome":...</msg>
<status status="PASS" starttime="20220706 17:19:03.406" endtime="20220706 17:19:03.406"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.407" level="INFO">${data} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.407" endtime="20220706 17:19:03.407"/>
</kw>
<msg timestamp="20220706 17:19:03.407" level="INFO">${json} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.406" endtime="20220706 17:19:03.407"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${payload}</var>
<arg>${json["${user}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.407" level="INFO">${payload} = {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password': '12234', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.407" endtime="20220706 17:19:03.407"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.407" endtime="20220706 17:19:03.408"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.408" level="INFO">${payload} = {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password': '12234', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.408" endtime="20220706 17:19:03.408"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.406" endtime="20220706 17:19:03.408"/>
</kw>
<kw name="Coletar ID Usuario Aleatorio" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.410" level="INFO">GET Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.410" level="INFO">GET Response : url=http://localhost:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2149ab6e-7e66-41bf-90b3-1d95c327fda1', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '12475', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 59,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Garrett Hoffman",
            "email": "heathernavarro@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "1YrNUFg67NujFkVr"
        },
        {
            "nome": "Bryan Aguilar",
            "email": "conleylori@example.org",
            "password": "&amp;9UPr",
            "administrador": "false",
            "_id": "1huYkTw4pgrTDcTJ"
        },
        {
            "nome": "Lauren Brown",
            "email": "ybennett@example.net",
            "password": "(N9Dv",
            "administrador": "true",
            "_id": "1nkJ8So16hb9jLP6"
        },
        {
            "nome": "Patricia Soto",
            "email": "vleon@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "34eyYGCPDeNwRVDH"
        },
        {
            "nome": "Meghan Orr",
            "email": "nkirk@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "3MvOuzoe5HcVvtZx"
        },
        {
            "nome": "Edwin Whitney",
            "email": "dmorales@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "3hiiroduALppqme6"
        },
        {
            "nome": "Jared Davis",
            "email": "david14@example.com",
            "password": "$1Bnn",
            "administrador": "true",
            "_id": "3oMwhgFYVzS2Tnai"
        },
        {
            "nome": "Ashley Garcia",
            "email": "tsanchez@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "4yVtXcE9HAuM81XK"
        },
        {
            "nome": "Patrick Krause",
            "email": "hgreen@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "6Viv3szSTs2E414T"
        },
        {
            "nome": "Fred Silva",
            "email": "rmills@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "6uTlIEDTY4tPG2NY"
        },
        {
            "nome": "Lisa Washington",
            "email": "ryan46@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "9ac1FG3y6V0zAxJe"
        },
        {
            "nome": "Davi luis",
            "email": "daviluis3@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "C8AvqUuxdkRE4l7K"
        },
        {
            "nome": "Jacob Turner",
            "email": "linda22@example.org",
            "password": ")5Gkb",
            "administrador": "true",
            "_id": "Dfb0wpiOiYE3OFiE"
        },
        {
            "nome": "Mary Patton",
            "email": "william71@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "EbFcSTgftrJy1uba"
        },
        {
            "nome": "William Stokes",
            "email": "smithkara@example.org",
            "password": "&amp;0WmY",
            "administrador": "true",
            "_id": "FrJGBoSo7Wn0Lpdu"
        },
        {
            "nome": "James Hernandez",
            "email": "jonesbrenda@example.com",
            "password": "(3Ibm",
            "administrador": "true",
            "_id": "GwfZ75MYS8RuIoNe"
        },
        {
            "nome": "Kelly Walker",
            "email": "gordondennis@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "IZwqoy15uk1nRURw"
        },
        {
            "nome": "Deborah Smith",
            "email": "wsimpson@example.net",
            "password": "+84St",
            "administrador": "true",
            "_id": "JAIfQc9Y7jdd1VOj"
        },
        {
            "nome": "Neymaru",
            "email": "fulano@qa.com.br",
            "password": "+2Ce8",
            "administrador": "true",
            "_id": "JJAwZmD0BGmmOavI"
        },
        {
            "nome": "Cazé",
            "email": "timothy39@example.net",
            "password": "+1AiH",
            "administrador": "false",
            "_id": "LBNTveEpMboFxKLp"
        },
        {
            "nome": "Sophia",
            "email": "Sophia_@qa.com",
            "password": "teste",
            "administrador": "false",
            "_id": "MypbABXqyjIiWamv"
        },
        {
            "nome": "William Carey",
            "email": "smithlisa@example.com",
            "password": "d^4Xm",
            "administrador": "true",
            "_id": "OdJ5yswAKeDh0RvI"
        },
        {
            "nome": "Bryan Larson",
            "email": "agilbert@example.org",
            "password": "$F3Tz",
            "administrador": "true",
            "_id": "PPw4iR5jZnVlE8UD"
        },
        {
            "nome": "Elizabeth Romero",
            "email": "leblanccassie@example.net",
            "password": "(*4Ud",
            "administrador": "true",
            "_id": "Qib9oETBywJ1LWNS"
        },
        {
            "nome": "Cody Adams",
            "email": "tbaker@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "RPUBl1zNkQBwYilz"
        },
        {
            "nome": "Brett Lewis",
            "email": "hamptondarryl@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "RfCSZupicTZLyPHv"
        },
        {
            "nome": "Jennifer Williams",
            "email": "probinson@example.org",
            "password": "*3Yfl",
            "administrador": "true",
            "_id": "TI7ypbgonQUp5Ki9"
        },
        {
            "nome": "John Gregory",
            "email": "zsmith@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "TqmKjbcOPAxIk2TX"
        },
        {
            "nome": "Nicholas Singleton",
            "email": "gilmorelisa@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Tz7VCr34EdGeTrMl"
        },
        {
            "nome": "Ryan Nelson",
            "email": "armstrongrita@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "ViliyyDZ5Wb5DUqI"
        },
        {
            "nome": "Charles Miles",
            "email": "julie74@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "YQaC6QQN3u5EkHiJ"
        },
        {
            "nome": "Wendy Ponce",
            "email": "xelliott@example.com",
            "password": "!F6Dm",
            "administrador": "true",
            "_id": "Z3ONAABtVcA6CUKX"
        },
        {
            "nome": "Yvette Young",
            "email": "ronaldinh9@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "ZBvcyIXYSEKQq9f9"
        },
        {
            "nome": "Jesus Butler",
            "email": "roysmith@example.com",
            "password": ")5B9u",
            "administrador": "true",
            "_id": "aI3a0u0wTf9S82Rt"
        },
        {
            "nome": "Danielle Frank",
            "email": "bryan90@example.org",
            "password": "%9Ija",
            "administrador": "true",
            "_id": "cH9igOkRlSKajqik"
        },
        {
            "nome": "Miss Michelle Villarreal",
            "email": "margaretkelly@example.com",
            "password": "N*0Ae",
            "administrador": "true",
            "_id": "d15FCfFp3a6ssvFn"
        },
        {
            "nome": "Joseph Ryan",
            "email": "roger38@example.org",
            "password": "$3NlS",
            "administrador": "true",
            "_id": "dKX9A9YWjknh6GBX"
        },
        {
            "nome": "Brittany Lara",
            "email": "stevensstephanie@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "fLnW3WziOY4hT6y4"
        },
        {
            "nome": "Kristen Holder",
            "email": "jlee@example.com",
            "password": "#5JoO",
            "administrador": "true",
            "_id": "hDSbtXkhlLtTcEgF"
        },
        {
            "nome": "James Davis",
            "email": "sdaniel@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "hUz4jiSuQYWUy1GS"
        },
        {
            "nome": "Robert Collins",
            "email": "walshryan@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "lvfhDVcRgVBVBEfz"
        },
        {
            "nome": "Richard Gomes",
            "email": "richard_@qa.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "m42DKtadITK7v6Kb"
        },
        {
            "nome": "Sophia Light",
            "email": "Sophia123@qa.com.br",
            "password": "(e1Ww",
            "administrador": "false",
            "_id": "mIHZzFvClk19pLM7"
        },
        {
            "nome": "Chris Aguirre",
            "email": "omaldonado@example.net",
            "password": "teste",
            "administrador": "false",
            "_id": "nefiiMwOLD3kT24D"
        },
        {
            "nome": "Kenneth Smith",
            "email": "toddjones@example.com",
            "password": "+0Pll",
            "administrador": "true",
            "_id": "oCwRwCVrDfLFbt7M"
        },
        {
            "nome": "Amy Rivera",
            "email": "james22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "qWR0ri4oJCzJeTCo"
        },
        {
            "nome": "Frank Castillo",... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220706 17:19:03.410" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.408" endtime="20220706 17:19:03.410"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${numbers}</var>
<arg>random.sample(range(1, ${response.json()["quantidade"]}),1)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.410" level="INFO">${numbers} = [6]</msg>
<status status="PASS" starttime="20220706 17:19:03.410" endtime="20220706 17:19:03.410"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_usuario}</var>
<arg>${response.json()["usuarios"][${numbers}[0]]["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.411" level="INFO">${id_usuario} = 3hiiroduALppqme6</msg>
<status status="PASS" starttime="20220706 17:19:03.410" endtime="20220706 17:19:03.411"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.411" level="INFO">${id_usuario} = 3hiiroduALppqme6</msg>
<status status="PASS" starttime="20220706 17:19:03.411" endtime="20220706 17:19:03.411"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.411" endtime="20220706 17:19:03.411"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.408" endtime="20220706 17:19:03.411"/>
</kw>
<kw name="PUT Endpoint /usuarios" library="usuarios_keywords">
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.413" level="INFO">PUT Request : url=http://localhost:3000/usuarios/3hiiroduALppqme6 
 path_url=/usuarios/3hiiroduALppqme6 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '97', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Roberto Pente", "email": "ribhif.com.br", "password": "12234", "administrador": "true"}' 
 </msg>
<msg timestamp="20220706 17:19:03.413" level="INFO">PUT Response : url=http://localhost:3000/usuarios/3hiiroduALppqme6 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '778dc752-83a7-47f9-88b8-c1a6dfe03ab0', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "email": "email deve ser um email válido"
} 
 </msg>
<msg timestamp="20220706 17:19:03.414" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.412" endtime="20220706 17:19:03.414"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.414" endtime="20220706 17:19:03.414"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.414" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.414" endtime="20220706 17:19:03.414"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.411" endtime="20220706 17:19:03.414"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.415" endtime="20220706 17:19:03.415"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.414" endtime="20220706 17:19:03.415"/>
</kw>
<kw name="Validar Se &quot;email&quot; Contem &quot;email deve ser um email válido&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.416" endtime="20220706 17:19:03.416"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.416" endtime="20220706 17:19:03.416"/>
</kw>
<tag>PUT_dados_invalidos PUT</tag>
<status status="PASS" starttime="20220706 17:19:03.405" endtime="20220706 17:19:03.416"/>
</test>
<test id="s1-t21" name="Cenário: PUT Editar Dados Sem nome 400" line="170">
<kw name="Pegar Dados Usuarios Estatico &quot;user_sem_nome&quot;" library="usuarios_keywords" sourcename="Pegar Dados Usuarios Estatico &quot;${user}&quot;">
<kw name="Importar Json Estatico" library="common">
<var>${json}</var>
<arg>json_usuario.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/statics/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220706 17:19:03.417" level="INFO" html="true">Getting file '&lt;a href="file://D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json"&gt;D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json&lt;/a&gt;'.</msg>
<msg timestamp="20220706 17:19:03.418" level="INFO">${arquivo} = {
    "user_valido":{
        "nome": "Alberto Junior",
        "email": "betinho3@qa.com",
        "password": "teste123",
        "administrador": "true"
    },
    "user_invalido":{
        "nome":...</msg>
<status status="PASS" starttime="20220706 17:19:03.417" endtime="20220706 17:19:03.418"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.418" level="INFO">${data} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.418" endtime="20220706 17:19:03.418"/>
</kw>
<msg timestamp="20220706 17:19:03.418" level="INFO">${json} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.417" endtime="20220706 17:19:03.418"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${payload}</var>
<arg>${json["${user}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.418" level="INFO">${payload} = {'nome': '', 'email': 'lorena123@qa.com', 'password': 'teste', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.418" endtime="20220706 17:19:03.419"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.419" endtime="20220706 17:19:03.419"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.419" level="INFO">${payload} = {'nome': '', 'email': 'lorena123@qa.com', 'password': 'teste', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.419" endtime="20220706 17:19:03.419"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.417" endtime="20220706 17:19:03.419"/>
</kw>
<kw name="Coletar ID Usuario Aleatorio" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.421" level="INFO">GET Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.421" level="INFO">GET Response : url=http://localhost:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '77c84eb8-6260-4d13-835b-24af946475d0', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '12475', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 59,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Garrett Hoffman",
            "email": "heathernavarro@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "1YrNUFg67NujFkVr"
        },
        {
            "nome": "Bryan Aguilar",
            "email": "conleylori@example.org",
            "password": "&amp;9UPr",
            "administrador": "false",
            "_id": "1huYkTw4pgrTDcTJ"
        },
        {
            "nome": "Lauren Brown",
            "email": "ybennett@example.net",
            "password": "(N9Dv",
            "administrador": "true",
            "_id": "1nkJ8So16hb9jLP6"
        },
        {
            "nome": "Patricia Soto",
            "email": "vleon@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "34eyYGCPDeNwRVDH"
        },
        {
            "nome": "Meghan Orr",
            "email": "nkirk@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "3MvOuzoe5HcVvtZx"
        },
        {
            "nome": "Edwin Whitney",
            "email": "dmorales@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "3hiiroduALppqme6"
        },
        {
            "nome": "Jared Davis",
            "email": "david14@example.com",
            "password": "$1Bnn",
            "administrador": "true",
            "_id": "3oMwhgFYVzS2Tnai"
        },
        {
            "nome": "Ashley Garcia",
            "email": "tsanchez@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "4yVtXcE9HAuM81XK"
        },
        {
            "nome": "Patrick Krause",
            "email": "hgreen@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "6Viv3szSTs2E414T"
        },
        {
            "nome": "Fred Silva",
            "email": "rmills@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "6uTlIEDTY4tPG2NY"
        },
        {
            "nome": "Lisa Washington",
            "email": "ryan46@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "9ac1FG3y6V0zAxJe"
        },
        {
            "nome": "Davi luis",
            "email": "daviluis3@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "C8AvqUuxdkRE4l7K"
        },
        {
            "nome": "Jacob Turner",
            "email": "linda22@example.org",
            "password": ")5Gkb",
            "administrador": "true",
            "_id": "Dfb0wpiOiYE3OFiE"
        },
        {
            "nome": "Mary Patton",
            "email": "william71@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "EbFcSTgftrJy1uba"
        },
        {
            "nome": "William Stokes",
            "email": "smithkara@example.org",
            "password": "&amp;0WmY",
            "administrador": "true",
            "_id": "FrJGBoSo7Wn0Lpdu"
        },
        {
            "nome": "James Hernandez",
            "email": "jonesbrenda@example.com",
            "password": "(3Ibm",
            "administrador": "true",
            "_id": "GwfZ75MYS8RuIoNe"
        },
        {
            "nome": "Kelly Walker",
            "email": "gordondennis@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "IZwqoy15uk1nRURw"
        },
        {
            "nome": "Deborah Smith",
            "email": "wsimpson@example.net",
            "password": "+84St",
            "administrador": "true",
            "_id": "JAIfQc9Y7jdd1VOj"
        },
        {
            "nome": "Neymaru",
            "email": "fulano@qa.com.br",
            "password": "+2Ce8",
            "administrador": "true",
            "_id": "JJAwZmD0BGmmOavI"
        },
        {
            "nome": "Cazé",
            "email": "timothy39@example.net",
            "password": "+1AiH",
            "administrador": "false",
            "_id": "LBNTveEpMboFxKLp"
        },
        {
            "nome": "Sophia",
            "email": "Sophia_@qa.com",
            "password": "teste",
            "administrador": "false",
            "_id": "MypbABXqyjIiWamv"
        },
        {
            "nome": "William Carey",
            "email": "smithlisa@example.com",
            "password": "d^4Xm",
            "administrador": "true",
            "_id": "OdJ5yswAKeDh0RvI"
        },
        {
            "nome": "Bryan Larson",
            "email": "agilbert@example.org",
            "password": "$F3Tz",
            "administrador": "true",
            "_id": "PPw4iR5jZnVlE8UD"
        },
        {
            "nome": "Elizabeth Romero",
            "email": "leblanccassie@example.net",
            "password": "(*4Ud",
            "administrador": "true",
            "_id": "Qib9oETBywJ1LWNS"
        },
        {
            "nome": "Cody Adams",
            "email": "tbaker@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "RPUBl1zNkQBwYilz"
        },
        {
            "nome": "Brett Lewis",
            "email": "hamptondarryl@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "RfCSZupicTZLyPHv"
        },
        {
            "nome": "Jennifer Williams",
            "email": "probinson@example.org",
            "password": "*3Yfl",
            "administrador": "true",
            "_id": "TI7ypbgonQUp5Ki9"
        },
        {
            "nome": "John Gregory",
            "email": "zsmith@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "TqmKjbcOPAxIk2TX"
        },
        {
            "nome": "Nicholas Singleton",
            "email": "gilmorelisa@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Tz7VCr34EdGeTrMl"
        },
        {
            "nome": "Ryan Nelson",
            "email": "armstrongrita@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "ViliyyDZ5Wb5DUqI"
        },
        {
            "nome": "Charles Miles",
            "email": "julie74@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "YQaC6QQN3u5EkHiJ"
        },
        {
            "nome": "Wendy Ponce",
            "email": "xelliott@example.com",
            "password": "!F6Dm",
            "administrador": "true",
            "_id": "Z3ONAABtVcA6CUKX"
        },
        {
            "nome": "Yvette Young",
            "email": "ronaldinh9@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "ZBvcyIXYSEKQq9f9"
        },
        {
            "nome": "Jesus Butler",
            "email": "roysmith@example.com",
            "password": ")5B9u",
            "administrador": "true",
            "_id": "aI3a0u0wTf9S82Rt"
        },
        {
            "nome": "Danielle Frank",
            "email": "bryan90@example.org",
            "password": "%9Ija",
            "administrador": "true",
            "_id": "cH9igOkRlSKajqik"
        },
        {
            "nome": "Miss Michelle Villarreal",
            "email": "margaretkelly@example.com",
            "password": "N*0Ae",
            "administrador": "true",
            "_id": "d15FCfFp3a6ssvFn"
        },
        {
            "nome": "Joseph Ryan",
            "email": "roger38@example.org",
            "password": "$3NlS",
            "administrador": "true",
            "_id": "dKX9A9YWjknh6GBX"
        },
        {
            "nome": "Brittany Lara",
            "email": "stevensstephanie@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "fLnW3WziOY4hT6y4"
        },
        {
            "nome": "Kristen Holder",
            "email": "jlee@example.com",
            "password": "#5JoO",
            "administrador": "true",
            "_id": "hDSbtXkhlLtTcEgF"
        },
        {
            "nome": "James Davis",
            "email": "sdaniel@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "hUz4jiSuQYWUy1GS"
        },
        {
            "nome": "Robert Collins",
            "email": "walshryan@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "lvfhDVcRgVBVBEfz"
        },
        {
            "nome": "Richard Gomes",
            "email": "richard_@qa.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "m42DKtadITK7v6Kb"
        },
        {
            "nome": "Sophia Light",
            "email": "Sophia123@qa.com.br",
            "password": "(e1Ww",
            "administrador": "false",
            "_id": "mIHZzFvClk19pLM7"
        },
        {
            "nome": "Chris Aguirre",
            "email": "omaldonado@example.net",
            "password": "teste",
            "administrador": "false",
            "_id": "nefiiMwOLD3kT24D"
        },
        {
            "nome": "Kenneth Smith",
            "email": "toddjones@example.com",
            "password": "+0Pll",
            "administrador": "true",
            "_id": "oCwRwCVrDfLFbt7M"
        },
        {
            "nome": "Amy Rivera",
            "email": "james22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "qWR0ri4oJCzJeTCo"
        },
        {
            "nome": "Frank Castillo",... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220706 17:19:03.421" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.419" endtime="20220706 17:19:03.421"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${numbers}</var>
<arg>random.sample(range(1, ${response.json()["quantidade"]}),1)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.422" level="INFO">${numbers} = [22]</msg>
<status status="PASS" starttime="20220706 17:19:03.421" endtime="20220706 17:19:03.422"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_usuario}</var>
<arg>${response.json()["usuarios"][${numbers}[0]]["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.422" level="INFO">${id_usuario} = OdJ5yswAKeDh0RvI</msg>
<status status="PASS" starttime="20220706 17:19:03.422" endtime="20220706 17:19:03.422"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.422" level="INFO">${id_usuario} = OdJ5yswAKeDh0RvI</msg>
<status status="PASS" starttime="20220706 17:19:03.422" endtime="20220706 17:19:03.422"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.422" endtime="20220706 17:19:03.423"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.419" endtime="20220706 17:19:03.423"/>
</kw>
<kw name="PUT Endpoint /usuarios" library="usuarios_keywords">
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.424" level="INFO">PUT Request : url=http://localhost:3000/usuarios/OdJ5yswAKeDh0RvI 
 path_url=/usuarios/OdJ5yswAKeDh0RvI 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '87', 'Content-Type': 'application/json'} 
 body=b'{"nome": "", "email": "lorena123@qa.com", "password": "teste", "administrador": "true"}' 
 </msg>
<msg timestamp="20220706 17:19:03.425" level="INFO">PUT Response : url=http://localhost:3000/usuarios/OdJ5yswAKeDh0RvI 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'fbf6837d-28ed-4c2c-94a2-00d6ce023d15', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '48', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "nome não pode ficar em branco"
} 
 </msg>
<msg timestamp="20220706 17:19:03.425" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.423" endtime="20220706 17:19:03.425"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.425" endtime="20220706 17:19:03.425"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.425" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.425" endtime="20220706 17:19:03.425"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.423" endtime="20220706 17:19:03.425"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.426" endtime="20220706 17:19:03.426"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.425" endtime="20220706 17:19:03.426"/>
</kw>
<kw name="Validar Se &quot;nome&quot; Contem &quot;nome não pode ficar em branco&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.427" endtime="20220706 17:19:03.427"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.426" endtime="20220706 17:19:03.427"/>
</kw>
<tag>PUT</tag>
<tag>PUT_sem_nome</tag>
<status status="PASS" starttime="20220706 17:19:03.417" endtime="20220706 17:19:03.427"/>
</test>
<test id="s1-t22" name="Cenário: PUT Editar Dados Sem Email 400" line="178">
<kw name="Pegar Dados Usuarios Estatico &quot;user_sem_email&quot;" library="usuarios_keywords" sourcename="Pegar Dados Usuarios Estatico &quot;${user}&quot;">
<kw name="Importar Json Estatico" library="common">
<var>${json}</var>
<arg>json_usuario.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/statics/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220706 17:19:03.428" level="INFO" html="true">Getting file '&lt;a href="file://D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json"&gt;D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json&lt;/a&gt;'.</msg>
<msg timestamp="20220706 17:19:03.428" level="INFO">${arquivo} = {
    "user_valido":{
        "nome": "Alberto Junior",
        "email": "betinho3@qa.com",
        "password": "teste123",
        "administrador": "true"
    },
    "user_invalido":{
        "nome":...</msg>
<status status="PASS" starttime="20220706 17:19:03.428" endtime="20220706 17:19:03.428"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.429" level="INFO">${data} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.428" endtime="20220706 17:19:03.429"/>
</kw>
<msg timestamp="20220706 17:19:03.429" level="INFO">${json} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.428" endtime="20220706 17:19:03.429"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${payload}</var>
<arg>${json["${user}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.429" level="INFO">${payload} = {'nome': 'Coutinho', 'email': '', 'password': 'couto123', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.429" endtime="20220706 17:19:03.429"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.429" endtime="20220706 17:19:03.429"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.430" level="INFO">${payload} = {'nome': 'Coutinho', 'email': '', 'password': 'couto123', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.429" endtime="20220706 17:19:03.430"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.428" endtime="20220706 17:19:03.430"/>
</kw>
<kw name="Coletar ID Usuario Aleatorio" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.433" level="INFO">GET Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.433" level="INFO">GET Response : url=http://localhost:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '20d9aa57-4731-4bce-b1ca-b0f08cd0a06e', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '12475', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 59,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Garrett Hoffman",
            "email": "heathernavarro@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "1YrNUFg67NujFkVr"
        },
        {
            "nome": "Bryan Aguilar",
            "email": "conleylori@example.org",
            "password": "&amp;9UPr",
            "administrador": "false",
            "_id": "1huYkTw4pgrTDcTJ"
        },
        {
            "nome": "Lauren Brown",
            "email": "ybennett@example.net",
            "password": "(N9Dv",
            "administrador": "true",
            "_id": "1nkJ8So16hb9jLP6"
        },
        {
            "nome": "Patricia Soto",
            "email": "vleon@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "34eyYGCPDeNwRVDH"
        },
        {
            "nome": "Meghan Orr",
            "email": "nkirk@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "3MvOuzoe5HcVvtZx"
        },
        {
            "nome": "Edwin Whitney",
            "email": "dmorales@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "3hiiroduALppqme6"
        },
        {
            "nome": "Jared Davis",
            "email": "david14@example.com",
            "password": "$1Bnn",
            "administrador": "true",
            "_id": "3oMwhgFYVzS2Tnai"
        },
        {
            "nome": "Ashley Garcia",
            "email": "tsanchez@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "4yVtXcE9HAuM81XK"
        },
        {
            "nome": "Patrick Krause",
            "email": "hgreen@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "6Viv3szSTs2E414T"
        },
        {
            "nome": "Fred Silva",
            "email": "rmills@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "6uTlIEDTY4tPG2NY"
        },
        {
            "nome": "Lisa Washington",
            "email": "ryan46@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "9ac1FG3y6V0zAxJe"
        },
        {
            "nome": "Davi luis",
            "email": "daviluis3@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "C8AvqUuxdkRE4l7K"
        },
        {
            "nome": "Jacob Turner",
            "email": "linda22@example.org",
            "password": ")5Gkb",
            "administrador": "true",
            "_id": "Dfb0wpiOiYE3OFiE"
        },
        {
            "nome": "Mary Patton",
            "email": "william71@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "EbFcSTgftrJy1uba"
        },
        {
            "nome": "William Stokes",
            "email": "smithkara@example.org",
            "password": "&amp;0WmY",
            "administrador": "true",
            "_id": "FrJGBoSo7Wn0Lpdu"
        },
        {
            "nome": "James Hernandez",
            "email": "jonesbrenda@example.com",
            "password": "(3Ibm",
            "administrador": "true",
            "_id": "GwfZ75MYS8RuIoNe"
        },
        {
            "nome": "Kelly Walker",
            "email": "gordondennis@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "IZwqoy15uk1nRURw"
        },
        {
            "nome": "Deborah Smith",
            "email": "wsimpson@example.net",
            "password": "+84St",
            "administrador": "true",
            "_id": "JAIfQc9Y7jdd1VOj"
        },
        {
            "nome": "Neymaru",
            "email": "fulano@qa.com.br",
            "password": "+2Ce8",
            "administrador": "true",
            "_id": "JJAwZmD0BGmmOavI"
        },
        {
            "nome": "Cazé",
            "email": "timothy39@example.net",
            "password": "+1AiH",
            "administrador": "false",
            "_id": "LBNTveEpMboFxKLp"
        },
        {
            "nome": "Sophia",
            "email": "Sophia_@qa.com",
            "password": "teste",
            "administrador": "false",
            "_id": "MypbABXqyjIiWamv"
        },
        {
            "nome": "William Carey",
            "email": "smithlisa@example.com",
            "password": "d^4Xm",
            "administrador": "true",
            "_id": "OdJ5yswAKeDh0RvI"
        },
        {
            "nome": "Bryan Larson",
            "email": "agilbert@example.org",
            "password": "$F3Tz",
            "administrador": "true",
            "_id": "PPw4iR5jZnVlE8UD"
        },
        {
            "nome": "Elizabeth Romero",
            "email": "leblanccassie@example.net",
            "password": "(*4Ud",
            "administrador": "true",
            "_id": "Qib9oETBywJ1LWNS"
        },
        {
            "nome": "Cody Adams",
            "email": "tbaker@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "RPUBl1zNkQBwYilz"
        },
        {
            "nome": "Brett Lewis",
            "email": "hamptondarryl@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "RfCSZupicTZLyPHv"
        },
        {
            "nome": "Jennifer Williams",
            "email": "probinson@example.org",
            "password": "*3Yfl",
            "administrador": "true",
            "_id": "TI7ypbgonQUp5Ki9"
        },
        {
            "nome": "John Gregory",
            "email": "zsmith@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "TqmKjbcOPAxIk2TX"
        },
        {
            "nome": "Nicholas Singleton",
            "email": "gilmorelisa@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Tz7VCr34EdGeTrMl"
        },
        {
            "nome": "Ryan Nelson",
            "email": "armstrongrita@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "ViliyyDZ5Wb5DUqI"
        },
        {
            "nome": "Charles Miles",
            "email": "julie74@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "YQaC6QQN3u5EkHiJ"
        },
        {
            "nome": "Wendy Ponce",
            "email": "xelliott@example.com",
            "password": "!F6Dm",
            "administrador": "true",
            "_id": "Z3ONAABtVcA6CUKX"
        },
        {
            "nome": "Yvette Young",
            "email": "ronaldinh9@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "ZBvcyIXYSEKQq9f9"
        },
        {
            "nome": "Jesus Butler",
            "email": "roysmith@example.com",
            "password": ")5B9u",
            "administrador": "true",
            "_id": "aI3a0u0wTf9S82Rt"
        },
        {
            "nome": "Danielle Frank",
            "email": "bryan90@example.org",
            "password": "%9Ija",
            "administrador": "true",
            "_id": "cH9igOkRlSKajqik"
        },
        {
            "nome": "Miss Michelle Villarreal",
            "email": "margaretkelly@example.com",
            "password": "N*0Ae",
            "administrador": "true",
            "_id": "d15FCfFp3a6ssvFn"
        },
        {
            "nome": "Joseph Ryan",
            "email": "roger38@example.org",
            "password": "$3NlS",
            "administrador": "true",
            "_id": "dKX9A9YWjknh6GBX"
        },
        {
            "nome": "Brittany Lara",
            "email": "stevensstephanie@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "fLnW3WziOY4hT6y4"
        },
        {
            "nome": "Kristen Holder",
            "email": "jlee@example.com",
            "password": "#5JoO",
            "administrador": "true",
            "_id": "hDSbtXkhlLtTcEgF"
        },
        {
            "nome": "James Davis",
            "email": "sdaniel@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "hUz4jiSuQYWUy1GS"
        },
        {
            "nome": "Robert Collins",
            "email": "walshryan@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "lvfhDVcRgVBVBEfz"
        },
        {
            "nome": "Richard Gomes",
            "email": "richard_@qa.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "m42DKtadITK7v6Kb"
        },
        {
            "nome": "Sophia Light",
            "email": "Sophia123@qa.com.br",
            "password": "(e1Ww",
            "administrador": "false",
            "_id": "mIHZzFvClk19pLM7"
        },
        {
            "nome": "Chris Aguirre",
            "email": "omaldonado@example.net",
            "password": "teste",
            "administrador": "false",
            "_id": "nefiiMwOLD3kT24D"
        },
        {
            "nome": "Kenneth Smith",
            "email": "toddjones@example.com",
            "password": "+0Pll",
            "administrador": "true",
            "_id": "oCwRwCVrDfLFbt7M"
        },
        {
            "nome": "Amy Rivera",
            "email": "james22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "qWR0ri4oJCzJeTCo"
        },
        {
            "nome": "Frank Castillo",... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220706 17:19:03.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.430" endtime="20220706 17:19:03.433"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${numbers}</var>
<arg>random.sample(range(1, ${response.json()["quantidade"]}),1)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.433" level="INFO">${numbers} = [43]</msg>
<status status="PASS" starttime="20220706 17:19:03.433" endtime="20220706 17:19:03.433"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_usuario}</var>
<arg>${response.json()["usuarios"][${numbers}[0]]["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.434" level="INFO">${id_usuario} = mIHZzFvClk19pLM7</msg>
<status status="PASS" starttime="20220706 17:19:03.434" endtime="20220706 17:19:03.434"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.434" level="INFO">${id_usuario} = mIHZzFvClk19pLM7</msg>
<status status="PASS" starttime="20220706 17:19:03.434" endtime="20220706 17:19:03.434"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.434" endtime="20220706 17:19:03.434"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.430" endtime="20220706 17:19:03.434"/>
</kw>
<kw name="PUT Endpoint /usuarios" library="usuarios_keywords">
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.437" level="INFO">PUT Request : url=http://localhost:3000/usuarios/mIHZzFvClk19pLM7 
 path_url=/usuarios/mIHZzFvClk19pLM7 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '82', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Coutinho", "email": "", "password": "couto123", "administrador": "true"}' 
 </msg>
<msg timestamp="20220706 17:19:03.437" level="INFO">PUT Response : url=http://localhost:3000/usuarios/mIHZzFvClk19pLM7 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd079f170-345a-46a2-afc4-cc317eca760b', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "email": "email não pode ficar em branco"
} 
 </msg>
<msg timestamp="20220706 17:19:03.437" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.435" endtime="20220706 17:19:03.437"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.437" endtime="20220706 17:19:03.438"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.438" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.438" endtime="20220706 17:19:03.438"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.435" endtime="20220706 17:19:03.438"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.438" endtime="20220706 17:19:03.439"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.438" endtime="20220706 17:19:03.439"/>
</kw>
<kw name="Validar Se &quot;email&quot; Contem &quot;email não pode ficar em branco&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.439" endtime="20220706 17:19:03.440"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.439" endtime="20220706 17:19:03.440"/>
</kw>
<tag>PUT</tag>
<tag>PUT_sem_email</tag>
<status status="PASS" starttime="20220706 17:19:03.427" endtime="20220706 17:19:03.440"/>
</test>
<test id="s1-t23" name="Cenário: PUT Editar Dados Sem Senha 400" line="186">
<kw name="Pegar Dados Usuarios Estatico &quot;user_sem_senha&quot;" library="usuarios_keywords" sourcename="Pegar Dados Usuarios Estatico &quot;${user}&quot;">
<kw name="Importar Json Estatico" library="common">
<var>${json}</var>
<arg>json_usuario.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/statics/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220706 17:19:03.441" level="INFO" html="true">Getting file '&lt;a href="file://D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json"&gt;D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json&lt;/a&gt;'.</msg>
<msg timestamp="20220706 17:19:03.441" level="INFO">${arquivo} = {
    "user_valido":{
        "nome": "Alberto Junior",
        "email": "betinho3@qa.com",
        "password": "teste123",
        "administrador": "true"
    },
    "user_invalido":{
        "nome":...</msg>
<status status="PASS" starttime="20220706 17:19:03.441" endtime="20220706 17:19:03.441"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.441" level="INFO">${data} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.441" endtime="20220706 17:19:03.441"/>
</kw>
<msg timestamp="20220706 17:19:03.441" level="INFO">${json} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.440" endtime="20220706 17:19:03.441"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${payload}</var>
<arg>${json["${user}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.442" level="INFO">${payload} = {'nome': 'Richarlyson', 'email': 'richarl@qa.com.br', 'password': '', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.441" endtime="20220706 17:19:03.442"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.442" endtime="20220706 17:19:03.442"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.442" level="INFO">${payload} = {'nome': 'Richarlyson', 'email': 'richarl@qa.com.br', 'password': '', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220706 17:19:03.442" endtime="20220706 17:19:03.442"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.440" endtime="20220706 17:19:03.442"/>
</kw>
<kw name="Coletar ID Usuario Aleatorio" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.444" level="INFO">GET Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.444" level="INFO">GET Response : url=http://localhost:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a886e1d8-f34d-446e-be67-8402393de4af', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '12475', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 59,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Garrett Hoffman",
            "email": "heathernavarro@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "1YrNUFg67NujFkVr"
        },
        {
            "nome": "Bryan Aguilar",
            "email": "conleylori@example.org",
            "password": "&amp;9UPr",
            "administrador": "false",
            "_id": "1huYkTw4pgrTDcTJ"
        },
        {
            "nome": "Lauren Brown",
            "email": "ybennett@example.net",
            "password": "(N9Dv",
            "administrador": "true",
            "_id": "1nkJ8So16hb9jLP6"
        },
        {
            "nome": "Patricia Soto",
            "email": "vleon@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "34eyYGCPDeNwRVDH"
        },
        {
            "nome": "Meghan Orr",
            "email": "nkirk@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "3MvOuzoe5HcVvtZx"
        },
        {
            "nome": "Edwin Whitney",
            "email": "dmorales@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "3hiiroduALppqme6"
        },
        {
            "nome": "Jared Davis",
            "email": "david14@example.com",
            "password": "$1Bnn",
            "administrador": "true",
            "_id": "3oMwhgFYVzS2Tnai"
        },
        {
            "nome": "Ashley Garcia",
            "email": "tsanchez@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "4yVtXcE9HAuM81XK"
        },
        {
            "nome": "Patrick Krause",
            "email": "hgreen@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "6Viv3szSTs2E414T"
        },
        {
            "nome": "Fred Silva",
            "email": "rmills@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "6uTlIEDTY4tPG2NY"
        },
        {
            "nome": "Lisa Washington",
            "email": "ryan46@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "9ac1FG3y6V0zAxJe"
        },
        {
            "nome": "Davi luis",
            "email": "daviluis3@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "C8AvqUuxdkRE4l7K"
        },
        {
            "nome": "Jacob Turner",
            "email": "linda22@example.org",
            "password": ")5Gkb",
            "administrador": "true",
            "_id": "Dfb0wpiOiYE3OFiE"
        },
        {
            "nome": "Mary Patton",
            "email": "william71@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "EbFcSTgftrJy1uba"
        },
        {
            "nome": "William Stokes",
            "email": "smithkara@example.org",
            "password": "&amp;0WmY",
            "administrador": "true",
            "_id": "FrJGBoSo7Wn0Lpdu"
        },
        {
            "nome": "James Hernandez",
            "email": "jonesbrenda@example.com",
            "password": "(3Ibm",
            "administrador": "true",
            "_id": "GwfZ75MYS8RuIoNe"
        },
        {
            "nome": "Kelly Walker",
            "email": "gordondennis@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "IZwqoy15uk1nRURw"
        },
        {
            "nome": "Deborah Smith",
            "email": "wsimpson@example.net",
            "password": "+84St",
            "administrador": "true",
            "_id": "JAIfQc9Y7jdd1VOj"
        },
        {
            "nome": "Neymaru",
            "email": "fulano@qa.com.br",
            "password": "+2Ce8",
            "administrador": "true",
            "_id": "JJAwZmD0BGmmOavI"
        },
        {
            "nome": "Cazé",
            "email": "timothy39@example.net",
            "password": "+1AiH",
            "administrador": "false",
            "_id": "LBNTveEpMboFxKLp"
        },
        {
            "nome": "Sophia",
            "email": "Sophia_@qa.com",
            "password": "teste",
            "administrador": "false",
            "_id": "MypbABXqyjIiWamv"
        },
        {
            "nome": "William Carey",
            "email": "smithlisa@example.com",
            "password": "d^4Xm",
            "administrador": "true",
            "_id": "OdJ5yswAKeDh0RvI"
        },
        {
            "nome": "Bryan Larson",
            "email": "agilbert@example.org",
            "password": "$F3Tz",
            "administrador": "true",
            "_id": "PPw4iR5jZnVlE8UD"
        },
        {
            "nome": "Elizabeth Romero",
            "email": "leblanccassie@example.net",
            "password": "(*4Ud",
            "administrador": "true",
            "_id": "Qib9oETBywJ1LWNS"
        },
        {
            "nome": "Cody Adams",
            "email": "tbaker@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "RPUBl1zNkQBwYilz"
        },
        {
            "nome": "Brett Lewis",
            "email": "hamptondarryl@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "RfCSZupicTZLyPHv"
        },
        {
            "nome": "Jennifer Williams",
            "email": "probinson@example.org",
            "password": "*3Yfl",
            "administrador": "true",
            "_id": "TI7ypbgonQUp5Ki9"
        },
        {
            "nome": "John Gregory",
            "email": "zsmith@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "TqmKjbcOPAxIk2TX"
        },
        {
            "nome": "Nicholas Singleton",
            "email": "gilmorelisa@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Tz7VCr34EdGeTrMl"
        },
        {
            "nome": "Ryan Nelson",
            "email": "armstrongrita@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "ViliyyDZ5Wb5DUqI"
        },
        {
            "nome": "Charles Miles",
            "email": "julie74@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "YQaC6QQN3u5EkHiJ"
        },
        {
            "nome": "Wendy Ponce",
            "email": "xelliott@example.com",
            "password": "!F6Dm",
            "administrador": "true",
            "_id": "Z3ONAABtVcA6CUKX"
        },
        {
            "nome": "Yvette Young",
            "email": "ronaldinh9@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "ZBvcyIXYSEKQq9f9"
        },
        {
            "nome": "Jesus Butler",
            "email": "roysmith@example.com",
            "password": ")5B9u",
            "administrador": "true",
            "_id": "aI3a0u0wTf9S82Rt"
        },
        {
            "nome": "Danielle Frank",
            "email": "bryan90@example.org",
            "password": "%9Ija",
            "administrador": "true",
            "_id": "cH9igOkRlSKajqik"
        },
        {
            "nome": "Miss Michelle Villarreal",
            "email": "margaretkelly@example.com",
            "password": "N*0Ae",
            "administrador": "true",
            "_id": "d15FCfFp3a6ssvFn"
        },
        {
            "nome": "Joseph Ryan",
            "email": "roger38@example.org",
            "password": "$3NlS",
            "administrador": "true",
            "_id": "dKX9A9YWjknh6GBX"
        },
        {
            "nome": "Brittany Lara",
            "email": "stevensstephanie@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "fLnW3WziOY4hT6y4"
        },
        {
            "nome": "Kristen Holder",
            "email": "jlee@example.com",
            "password": "#5JoO",
            "administrador": "true",
            "_id": "hDSbtXkhlLtTcEgF"
        },
        {
            "nome": "James Davis",
            "email": "sdaniel@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "hUz4jiSuQYWUy1GS"
        },
        {
            "nome": "Robert Collins",
            "email": "walshryan@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "lvfhDVcRgVBVBEfz"
        },
        {
            "nome": "Richard Gomes",
            "email": "richard_@qa.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "m42DKtadITK7v6Kb"
        },
        {
            "nome": "Sophia Light",
            "email": "Sophia123@qa.com.br",
            "password": "(e1Ww",
            "administrador": "false",
            "_id": "mIHZzFvClk19pLM7"
        },
        {
            "nome": "Chris Aguirre",
            "email": "omaldonado@example.net",
            "password": "teste",
            "administrador": "false",
            "_id": "nefiiMwOLD3kT24D"
        },
        {
            "nome": "Kenneth Smith",
            "email": "toddjones@example.com",
            "password": "+0Pll",
            "administrador": "true",
            "_id": "oCwRwCVrDfLFbt7M"
        },
        {
            "nome": "Amy Rivera",
            "email": "james22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "qWR0ri4oJCzJeTCo"
        },
        {
            "nome": "Frank Castillo",... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220706 17:19:03.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.443" endtime="20220706 17:19:03.444"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${numbers}</var>
<arg>random.sample(range(1, ${response.json()["quantidade"]}),1)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.445" level="INFO">${numbers} = [39]</msg>
<status status="PASS" starttime="20220706 17:19:03.444" endtime="20220706 17:19:03.445"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_usuario}</var>
<arg>${response.json()["usuarios"][${numbers}[0]]["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.445" level="INFO">${id_usuario} = hDSbtXkhlLtTcEgF</msg>
<status status="PASS" starttime="20220706 17:19:03.445" endtime="20220706 17:19:03.445"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.445" level="INFO">${id_usuario} = hDSbtXkhlLtTcEgF</msg>
<status status="PASS" starttime="20220706 17:19:03.445" endtime="20220706 17:19:03.445"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.446" endtime="20220706 17:19:03.446"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.442" endtime="20220706 17:19:03.446"/>
</kw>
<kw name="PUT Endpoint /usuarios" library="usuarios_keywords">
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.448" level="INFO">PUT Request : url=http://localhost:3000/usuarios/hDSbtXkhlLtTcEgF 
 path_url=/usuarios/hDSbtXkhlLtTcEgF 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '94', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Richarlyson", "email": "richarl@qa.com.br", "password": "", "administrador": "true"}' 
 </msg>
<msg timestamp="20220706 17:19:03.448" level="INFO">PUT Response : url=http://localhost:3000/usuarios/hDSbtXkhlLtTcEgF 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'bc0e9403-01c1-4b73-9727-d93d4f993d37', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '56', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "password": "password não pode ficar em branco"
} 
 </msg>
<msg timestamp="20220706 17:19:03.448" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.447" endtime="20220706 17:19:03.448"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.448" endtime="20220706 17:19:03.449"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.449" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.449" endtime="20220706 17:19:03.449"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.446" endtime="20220706 17:19:03.449"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.449" endtime="20220706 17:19:03.450"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.449" endtime="20220706 17:19:03.450"/>
</kw>
<kw name="Validar Se &quot;password&quot; Contem &quot;password não pode ficar em branco&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.450" endtime="20220706 17:19:03.450"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.450" endtime="20220706 17:19:03.450"/>
</kw>
<tag>PUT</tag>
<tag>PUT_sem_senha</tag>
<status status="PASS" starttime="20220706 17:19:03.440" endtime="20220706 17:19:03.451"/>
</test>
<test id="s1-t24" name="Cenário: POST Editar Dados Administrador Invalido 400" line="194">
<kw name="Pegar Dados Usuarios Estatico &quot;user_adm_invalido&quot;" library="usuarios_keywords" sourcename="Pegar Dados Usuarios Estatico &quot;${user}&quot;">
<kw name="Importar Json Estatico" library="common">
<var>${json}</var>
<arg>json_usuario.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivo}</var>
<arg>${EXECDIR}/support/fixtures/statics/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220706 17:19:03.452" level="INFO" html="true">Getting file '&lt;a href="file://D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json"&gt;D:\Coisas\Estudos\Compass\Robot_framework\support\fixtures\statics\json_usuario.json&lt;/a&gt;'.</msg>
<msg timestamp="20220706 17:19:03.452" level="INFO">${arquivo} = {
    "user_valido":{
        "nome": "Alberto Junior",
        "email": "betinho3@qa.com",
        "password": "teste123",
        "administrador": "true"
    },
    "user_invalido":{
        "nome":...</msg>
<status status="PASS" starttime="20220706 17:19:03.451" endtime="20220706 17:19:03.452"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.452" level="INFO">${data} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.452" endtime="20220706 17:19:03.452"/>
</kw>
<msg timestamp="20220706 17:19:03.452" level="INFO">${json} = {'user_valido': {'nome': 'Alberto Junior', 'email': 'betinho3@qa.com', 'password': 'teste123', 'administrador': 'true'}, 'user_invalido': {'nome': 'Roberto Pente', 'email': 'ribhif.com.br', 'password'...</msg>
<status status="PASS" starttime="20220706 17:19:03.451" endtime="20220706 17:19:03.452"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${payload}</var>
<arg>${json["${user}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.453" level="INFO">${payload} = {'nome': 'Carlos Ramos', 'email': 'carlitos@qa.com.br', 'password': 'couto123', 'administrador': 'verdade'}</msg>
<status status="PASS" starttime="20220706 17:19:03.452" endtime="20220706 17:19:03.453"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.453" endtime="20220706 17:19:03.453"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${payload}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.453" level="INFO">${payload} = {'nome': 'Carlos Ramos', 'email': 'carlitos@qa.com.br', 'password': 'couto123', 'administrador': 'verdade'}</msg>
<status status="PASS" starttime="20220706 17:19:03.453" endtime="20220706 17:19:03.453"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.451" endtime="20220706 17:19:03.453"/>
</kw>
<kw name="Coletar ID Usuario Aleatorio" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.455" level="INFO">GET Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.455" level="INFO">GET Response : url=http://localhost:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1d5a439b-7820-4059-967b-0d31b05104a0', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '12475', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 59,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Garrett Hoffman",
            "email": "heathernavarro@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "1YrNUFg67NujFkVr"
        },
        {
            "nome": "Bryan Aguilar",
            "email": "conleylori@example.org",
            "password": "&amp;9UPr",
            "administrador": "false",
            "_id": "1huYkTw4pgrTDcTJ"
        },
        {
            "nome": "Lauren Brown",
            "email": "ybennett@example.net",
            "password": "(N9Dv",
            "administrador": "true",
            "_id": "1nkJ8So16hb9jLP6"
        },
        {
            "nome": "Patricia Soto",
            "email": "vleon@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "34eyYGCPDeNwRVDH"
        },
        {
            "nome": "Meghan Orr",
            "email": "nkirk@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "3MvOuzoe5HcVvtZx"
        },
        {
            "nome": "Edwin Whitney",
            "email": "dmorales@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "3hiiroduALppqme6"
        },
        {
            "nome": "Jared Davis",
            "email": "david14@example.com",
            "password": "$1Bnn",
            "administrador": "true",
            "_id": "3oMwhgFYVzS2Tnai"
        },
        {
            "nome": "Ashley Garcia",
            "email": "tsanchez@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "4yVtXcE9HAuM81XK"
        },
        {
            "nome": "Patrick Krause",
            "email": "hgreen@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "6Viv3szSTs2E414T"
        },
        {
            "nome": "Fred Silva",
            "email": "rmills@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "6uTlIEDTY4tPG2NY"
        },
        {
            "nome": "Lisa Washington",
            "email": "ryan46@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "9ac1FG3y6V0zAxJe"
        },
        {
            "nome": "Davi luis",
            "email": "daviluis3@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "C8AvqUuxdkRE4l7K"
        },
        {
            "nome": "Jacob Turner",
            "email": "linda22@example.org",
            "password": ")5Gkb",
            "administrador": "true",
            "_id": "Dfb0wpiOiYE3OFiE"
        },
        {
            "nome": "Mary Patton",
            "email": "william71@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "EbFcSTgftrJy1uba"
        },
        {
            "nome": "William Stokes",
            "email": "smithkara@example.org",
            "password": "&amp;0WmY",
            "administrador": "true",
            "_id": "FrJGBoSo7Wn0Lpdu"
        },
        {
            "nome": "James Hernandez",
            "email": "jonesbrenda@example.com",
            "password": "(3Ibm",
            "administrador": "true",
            "_id": "GwfZ75MYS8RuIoNe"
        },
        {
            "nome": "Kelly Walker",
            "email": "gordondennis@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "IZwqoy15uk1nRURw"
        },
        {
            "nome": "Deborah Smith",
            "email": "wsimpson@example.net",
            "password": "+84St",
            "administrador": "true",
            "_id": "JAIfQc9Y7jdd1VOj"
        },
        {
            "nome": "Neymaru",
            "email": "fulano@qa.com.br",
            "password": "+2Ce8",
            "administrador": "true",
            "_id": "JJAwZmD0BGmmOavI"
        },
        {
            "nome": "Cazé",
            "email": "timothy39@example.net",
            "password": "+1AiH",
            "administrador": "false",
            "_id": "LBNTveEpMboFxKLp"
        },
        {
            "nome": "Sophia",
            "email": "Sophia_@qa.com",
            "password": "teste",
            "administrador": "false",
            "_id": "MypbABXqyjIiWamv"
        },
        {
            "nome": "William Carey",
            "email": "smithlisa@example.com",
            "password": "d^4Xm",
            "administrador": "true",
            "_id": "OdJ5yswAKeDh0RvI"
        },
        {
            "nome": "Bryan Larson",
            "email": "agilbert@example.org",
            "password": "$F3Tz",
            "administrador": "true",
            "_id": "PPw4iR5jZnVlE8UD"
        },
        {
            "nome": "Elizabeth Romero",
            "email": "leblanccassie@example.net",
            "password": "(*4Ud",
            "administrador": "true",
            "_id": "Qib9oETBywJ1LWNS"
        },
        {
            "nome": "Cody Adams",
            "email": "tbaker@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "RPUBl1zNkQBwYilz"
        },
        {
            "nome": "Brett Lewis",
            "email": "hamptondarryl@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "RfCSZupicTZLyPHv"
        },
        {
            "nome": "Jennifer Williams",
            "email": "probinson@example.org",
            "password": "*3Yfl",
            "administrador": "true",
            "_id": "TI7ypbgonQUp5Ki9"
        },
        {
            "nome": "John Gregory",
            "email": "zsmith@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "TqmKjbcOPAxIk2TX"
        },
        {
            "nome": "Nicholas Singleton",
            "email": "gilmorelisa@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Tz7VCr34EdGeTrMl"
        },
        {
            "nome": "Ryan Nelson",
            "email": "armstrongrita@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "ViliyyDZ5Wb5DUqI"
        },
        {
            "nome": "Charles Miles",
            "email": "julie74@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "YQaC6QQN3u5EkHiJ"
        },
        {
            "nome": "Wendy Ponce",
            "email": "xelliott@example.com",
            "password": "!F6Dm",
            "administrador": "true",
            "_id": "Z3ONAABtVcA6CUKX"
        },
        {
            "nome": "Yvette Young",
            "email": "ronaldinh9@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "ZBvcyIXYSEKQq9f9"
        },
        {
            "nome": "Jesus Butler",
            "email": "roysmith@example.com",
            "password": ")5B9u",
            "administrador": "true",
            "_id": "aI3a0u0wTf9S82Rt"
        },
        {
            "nome": "Danielle Frank",
            "email": "bryan90@example.org",
            "password": "%9Ija",
            "administrador": "true",
            "_id": "cH9igOkRlSKajqik"
        },
        {
            "nome": "Miss Michelle Villarreal",
            "email": "margaretkelly@example.com",
            "password": "N*0Ae",
            "administrador": "true",
            "_id": "d15FCfFp3a6ssvFn"
        },
        {
            "nome": "Joseph Ryan",
            "email": "roger38@example.org",
            "password": "$3NlS",
            "administrador": "true",
            "_id": "dKX9A9YWjknh6GBX"
        },
        {
            "nome": "Brittany Lara",
            "email": "stevensstephanie@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "fLnW3WziOY4hT6y4"
        },
        {
            "nome": "Kristen Holder",
            "email": "jlee@example.com",
            "password": "#5JoO",
            "administrador": "true",
            "_id": "hDSbtXkhlLtTcEgF"
        },
        {
            "nome": "James Davis",
            "email": "sdaniel@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "hUz4jiSuQYWUy1GS"
        },
        {
            "nome": "Robert Collins",
            "email": "walshryan@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "lvfhDVcRgVBVBEfz"
        },
        {
            "nome": "Richard Gomes",
            "email": "richard_@qa.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "m42DKtadITK7v6Kb"
        },
        {
            "nome": "Sophia Light",
            "email": "Sophia123@qa.com.br",
            "password": "(e1Ww",
            "administrador": "false",
            "_id": "mIHZzFvClk19pLM7"
        },
        {
            "nome": "Chris Aguirre",
            "email": "omaldonado@example.net",
            "password": "teste",
            "administrador": "false",
            "_id": "nefiiMwOLD3kT24D"
        },
        {
            "nome": "Kenneth Smith",
            "email": "toddjones@example.com",
            "password": "+0Pll",
            "administrador": "true",
            "_id": "oCwRwCVrDfLFbt7M"
        },
        {
            "nome": "Amy Rivera",
            "email": "james22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "qWR0ri4oJCzJeTCo"
        },
        {
            "nome": "Frank Castillo",... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220706 17:19:03.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.453" endtime="20220706 17:19:03.455"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${numbers}</var>
<arg>random.sample(range(1, ${response.json()["quantidade"]}),1)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.456" level="INFO">${numbers} = [28]</msg>
<status status="PASS" starttime="20220706 17:19:03.455" endtime="20220706 17:19:03.456"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_usuario}</var>
<arg>${response.json()["usuarios"][${numbers}[0]]["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.456" level="INFO">${id_usuario} = TqmKjbcOPAxIk2TX</msg>
<status status="PASS" starttime="20220706 17:19:03.456" endtime="20220706 17:19:03.456"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.456" level="INFO">${id_usuario} = TqmKjbcOPAxIk2TX</msg>
<status status="PASS" starttime="20220706 17:19:03.456" endtime="20220706 17:19:03.456"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.456" endtime="20220706 17:19:03.457"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.453" endtime="20220706 17:19:03.457"/>
</kw>
<kw name="PUT Endpoint /usuarios" library="usuarios_keywords">
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.458" level="INFO">PUT Request : url=http://localhost:3000/usuarios/TqmKjbcOPAxIk2TX 
 path_url=/usuarios/TqmKjbcOPAxIk2TX 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '107', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Carlos Ramos", "email": "carlitos@qa.com.br", "password": "couto123", "administrador": "verdade"}' 
 </msg>
<msg timestamp="20220706 17:19:03.458" level="INFO">PUT Response : url=http://localhost:3000/usuarios/TqmKjbcOPAxIk2TX 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f05e426d-1f32-4c34-8c75-2f3d4f17f6ef', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '67', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "administrador": "administrador deve ser 'true' ou 'false'"
} 
 </msg>
<msg timestamp="20220706 17:19:03.458" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.457" endtime="20220706 17:19:03.458"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.459" endtime="20220706 17:19:03.459"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.459" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.459" endtime="20220706 17:19:03.459"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.457" endtime="20220706 17:19:03.459"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.459" endtime="20220706 17:19:03.460"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.459" endtime="20220706 17:19:03.460"/>
</kw>
<kw name="Validar Se &quot;administrador&quot; Contem &quot;administrador deve ser 'true' ou 'false'&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.460" endtime="20220706 17:19:03.461"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.460" endtime="20220706 17:19:03.461"/>
</kw>
<tag>PUT</tag>
<tag>PUT_adm_invalido</tag>
<status status="PASS" starttime="20220706 17:19:03.451" endtime="20220706 17:19:03.461"/>
</test>
<test id="s1-t25" name="Cenário: DELETE Deletar Usuario 200" line="203">
<kw name="Coletar ID Usuario Aleatorio" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.464" level="INFO">GET Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.464" level="INFO">GET Response : url=http://localhost:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '19f91da1-a068-4594-816b-997d25d15257', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '12475', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 59,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Garrett Hoffman",
            "email": "heathernavarro@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "1YrNUFg67NujFkVr"
        },
        {
            "nome": "Bryan Aguilar",
            "email": "conleylori@example.org",
            "password": "&amp;9UPr",
            "administrador": "false",
            "_id": "1huYkTw4pgrTDcTJ"
        },
        {
            "nome": "Lauren Brown",
            "email": "ybennett@example.net",
            "password": "(N9Dv",
            "administrador": "true",
            "_id": "1nkJ8So16hb9jLP6"
        },
        {
            "nome": "Patricia Soto",
            "email": "vleon@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "34eyYGCPDeNwRVDH"
        },
        {
            "nome": "Meghan Orr",
            "email": "nkirk@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "3MvOuzoe5HcVvtZx"
        },
        {
            "nome": "Edwin Whitney",
            "email": "dmorales@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "3hiiroduALppqme6"
        },
        {
            "nome": "Jared Davis",
            "email": "david14@example.com",
            "password": "$1Bnn",
            "administrador": "true",
            "_id": "3oMwhgFYVzS2Tnai"
        },
        {
            "nome": "Ashley Garcia",
            "email": "tsanchez@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "4yVtXcE9HAuM81XK"
        },
        {
            "nome": "Patrick Krause",
            "email": "hgreen@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "6Viv3szSTs2E414T"
        },
        {
            "nome": "Fred Silva",
            "email": "rmills@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "6uTlIEDTY4tPG2NY"
        },
        {
            "nome": "Lisa Washington",
            "email": "ryan46@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "9ac1FG3y6V0zAxJe"
        },
        {
            "nome": "Davi luis",
            "email": "daviluis3@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "C8AvqUuxdkRE4l7K"
        },
        {
            "nome": "Jacob Turner",
            "email": "linda22@example.org",
            "password": ")5Gkb",
            "administrador": "true",
            "_id": "Dfb0wpiOiYE3OFiE"
        },
        {
            "nome": "Mary Patton",
            "email": "william71@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "EbFcSTgftrJy1uba"
        },
        {
            "nome": "William Stokes",
            "email": "smithkara@example.org",
            "password": "&amp;0WmY",
            "administrador": "true",
            "_id": "FrJGBoSo7Wn0Lpdu"
        },
        {
            "nome": "James Hernandez",
            "email": "jonesbrenda@example.com",
            "password": "(3Ibm",
            "administrador": "true",
            "_id": "GwfZ75MYS8RuIoNe"
        },
        {
            "nome": "Kelly Walker",
            "email": "gordondennis@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "IZwqoy15uk1nRURw"
        },
        {
            "nome": "Deborah Smith",
            "email": "wsimpson@example.net",
            "password": "+84St",
            "administrador": "true",
            "_id": "JAIfQc9Y7jdd1VOj"
        },
        {
            "nome": "Neymaru",
            "email": "fulano@qa.com.br",
            "password": "+2Ce8",
            "administrador": "true",
            "_id": "JJAwZmD0BGmmOavI"
        },
        {
            "nome": "Cazé",
            "email": "timothy39@example.net",
            "password": "+1AiH",
            "administrador": "false",
            "_id": "LBNTveEpMboFxKLp"
        },
        {
            "nome": "Sophia",
            "email": "Sophia_@qa.com",
            "password": "teste",
            "administrador": "false",
            "_id": "MypbABXqyjIiWamv"
        },
        {
            "nome": "William Carey",
            "email": "smithlisa@example.com",
            "password": "d^4Xm",
            "administrador": "true",
            "_id": "OdJ5yswAKeDh0RvI"
        },
        {
            "nome": "Bryan Larson",
            "email": "agilbert@example.org",
            "password": "$F3Tz",
            "administrador": "true",
            "_id": "PPw4iR5jZnVlE8UD"
        },
        {
            "nome": "Elizabeth Romero",
            "email": "leblanccassie@example.net",
            "password": "(*4Ud",
            "administrador": "true",
            "_id": "Qib9oETBywJ1LWNS"
        },
        {
            "nome": "Cody Adams",
            "email": "tbaker@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "RPUBl1zNkQBwYilz"
        },
        {
            "nome": "Brett Lewis",
            "email": "hamptondarryl@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "RfCSZupicTZLyPHv"
        },
        {
            "nome": "Jennifer Williams",
            "email": "probinson@example.org",
            "password": "*3Yfl",
            "administrador": "true",
            "_id": "TI7ypbgonQUp5Ki9"
        },
        {
            "nome": "John Gregory",
            "email": "zsmith@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "TqmKjbcOPAxIk2TX"
        },
        {
            "nome": "Nicholas Singleton",
            "email": "gilmorelisa@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Tz7VCr34EdGeTrMl"
        },
        {
            "nome": "Ryan Nelson",
            "email": "armstrongrita@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "ViliyyDZ5Wb5DUqI"
        },
        {
            "nome": "Charles Miles",
            "email": "julie74@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "YQaC6QQN3u5EkHiJ"
        },
        {
            "nome": "Wendy Ponce",
            "email": "xelliott@example.com",
            "password": "!F6Dm",
            "administrador": "true",
            "_id": "Z3ONAABtVcA6CUKX"
        },
        {
            "nome": "Yvette Young",
            "email": "ronaldinh9@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "ZBvcyIXYSEKQq9f9"
        },
        {
            "nome": "Jesus Butler",
            "email": "roysmith@example.com",
            "password": ")5B9u",
            "administrador": "true",
            "_id": "aI3a0u0wTf9S82Rt"
        },
        {
            "nome": "Danielle Frank",
            "email": "bryan90@example.org",
            "password": "%9Ija",
            "administrador": "true",
            "_id": "cH9igOkRlSKajqik"
        },
        {
            "nome": "Miss Michelle Villarreal",
            "email": "margaretkelly@example.com",
            "password": "N*0Ae",
            "administrador": "true",
            "_id": "d15FCfFp3a6ssvFn"
        },
        {
            "nome": "Joseph Ryan",
            "email": "roger38@example.org",
            "password": "$3NlS",
            "administrador": "true",
            "_id": "dKX9A9YWjknh6GBX"
        },
        {
            "nome": "Brittany Lara",
            "email": "stevensstephanie@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "fLnW3WziOY4hT6y4"
        },
        {
            "nome": "Kristen Holder",
            "email": "jlee@example.com",
            "password": "#5JoO",
            "administrador": "true",
            "_id": "hDSbtXkhlLtTcEgF"
        },
        {
            "nome": "James Davis",
            "email": "sdaniel@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "hUz4jiSuQYWUy1GS"
        },
        {
            "nome": "Robert Collins",
            "email": "walshryan@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "lvfhDVcRgVBVBEfz"
        },
        {
            "nome": "Richard Gomes",
            "email": "richard_@qa.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "m42DKtadITK7v6Kb"
        },
        {
            "nome": "Sophia Light",
            "email": "Sophia123@qa.com.br",
            "password": "(e1Ww",
            "administrador": "false",
            "_id": "mIHZzFvClk19pLM7"
        },
        {
            "nome": "Chris Aguirre",
            "email": "omaldonado@example.net",
            "password": "teste",
            "administrador": "false",
            "_id": "nefiiMwOLD3kT24D"
        },
        {
            "nome": "Kenneth Smith",
            "email": "toddjones@example.com",
            "password": "+0Pll",
            "administrador": "true",
            "_id": "oCwRwCVrDfLFbt7M"
        },
        {
            "nome": "Amy Rivera",
            "email": "james22@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "qWR0ri4oJCzJeTCo"
        },
        {
            "nome": "Frank Castillo",... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220706 17:19:03.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.462" endtime="20220706 17:19:03.464"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${numbers}</var>
<arg>random.sample(range(1, ${response.json()["quantidade"]}),1)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220706 17:19:03.465" level="INFO">${numbers} = [57]</msg>
<status status="PASS" starttime="20220706 17:19:03.464" endtime="20220706 17:19:03.465"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${id_usuario}</var>
<arg>${response.json()["usuarios"][${numbers}[0]]["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220706 17:19:03.465" level="INFO">${id_usuario} = zCoOc8eAQNnpB5Es</msg>
<status status="PASS" starttime="20220706 17:19:03.465" endtime="20220706 17:19:03.465"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.465" level="INFO">${id_usuario} = zCoOc8eAQNnpB5Es</msg>
<status status="PASS" starttime="20220706 17:19:03.465" endtime="20220706 17:19:03.465"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.465" endtime="20220706 17:19:03.465"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.462" endtime="20220706 17:19:03.465"/>
</kw>
<kw name="GET Endpoint /usuarios por ID" library="usuarios_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.467" level="INFO">GET Request : url=http://localhost:3000/usuarios/zCoOc8eAQNnpB5Es 
 path_url=/usuarios/zCoOc8eAQNnpB5Es 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.467" level="INFO">GET Response : url=http://localhost:3000/usuarios/zCoOc8eAQNnpB5Es 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b2635d29-754e-4f29-9a24-69b5acceecf6', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '151', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "Carl Wallace",
    "email": "iharvey@example.org",
    "password": "teste",
    "administrador": "true",
    "_id": "zCoOc8eAQNnpB5Es"
} 
 </msg>
<msg timestamp="20220706 17:19:03.467" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.466" endtime="20220706 17:19:03.467"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.467" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.467" endtime="20220706 17:19:03.467"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.467" endtime="20220706 17:19:03.468"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.466" endtime="20220706 17:19:03.468"/>
</kw>
<kw name="DELETE Endpoint /usuarios" library="usuarios_keywords">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.470" level="INFO">DELETE Request : url=http://localhost:3000/usuarios/zCoOc8eAQNnpB5Es 
 path_url=/usuarios/zCoOc8eAQNnpB5Es 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.470" level="INFO">DELETE Response : url=http://localhost:3000/usuarios/zCoOc8eAQNnpB5Es 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'adf7c627-c3af-4ee1-b9c3-440ba9a8e5de', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20220706 17:19:03.470" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.468" endtime="20220706 17:19:03.470"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.470" endtime="20220706 17:19:03.470"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.471" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.470" endtime="20220706 17:19:03.471"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.468" endtime="20220706 17:19:03.471"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.471" endtime="20220706 17:19:03.472"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.471" endtime="20220706 17:19:03.472"/>
</kw>
<kw name="Validar Se &quot;message&quot; Contem &quot;Registro excluído com sucesso&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.472" endtime="20220706 17:19:03.472"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.472" endtime="20220706 17:19:03.472"/>
</kw>
<tag>DELETE</tag>
<tag>DELETE_usuario</tag>
<status status="PASS" starttime="20220706 17:19:03.462" endtime="20220706 17:19:03.472"/>
</test>
<test id="s1-t26" name="Cenário: DELETE Não Encontrar Usuario 200" line="211">
<kw name="Definir ID Usuario &quot;IDinvalido&quot;" library="usuarios_keywords" sourcename="Definir ID Usuario &quot;${id_usuario}&quot;">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${id_usuario}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.473" level="INFO">${id_usuario} = IDinvalido</msg>
<status status="PASS" starttime="20220706 17:19:03.473" endtime="20220706 17:19:03.473"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.473" endtime="20220706 17:19:03.473"/>
</kw>
<kw name="DELETE Endpoint /usuarios" library="usuarios_keywords">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20220706 17:19:03.475" level="INFO">DELETE Request : url=http://localhost:3000/usuarios/IDinvalido 
 path_url=/usuarios/IDinvalido 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220706 17:19:03.475" level="INFO">DELETE Response : url=http://localhost:3000/usuarios/IDinvalido 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '71c8360b-b209-4e23-88f4-db6f780daf2d', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '46', 'Date': 'Wed, 06 Jul 2022 20:19:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Nenhum registro excluído"
} 
 </msg>
<msg timestamp="20220706 17:19:03.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.474" endtime="20220706 17:19:03.475"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220706 17:19:03.475" endtime="20220706 17:19:03.476"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220706 17:19:03.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 17:19:03.476" endtime="20220706 17:19:03.476"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.474" endtime="20220706 17:19:03.476"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 17:19:03.476" endtime="20220706 17:19:03.477"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.476" endtime="20220706 17:19:03.477"/>
</kw>
<kw name="Validar Se &quot;message&quot; Contem &quot;Nenhum registro excluído&quot;" library="common" sourcename="Validar Se &quot;${chave}&quot; Contem &quot;${texto}&quot;">
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()["${chave}"]}</arg>
<arg>${texto}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220706 17:19:03.478" endtime="20220706 17:19:03.478"/>
</kw>
<status status="PASS" starttime="20220706 17:19:03.478" endtime="20220706 17:19:03.478"/>
</kw>
<tag>DELETE</tag>
<tag>DELETE_id_invalido</tag>
<status status="PASS" starttime="20220706 17:19:03.473" endtime="20220706 17:19:03.478"/>
</test>
<test id="s1-t27" name="Cenário: DELETE Usuario Com Carrinho 400" line="218">
<status status="FAIL" starttime="20220706 17:19:03.479" endtime="20220706 17:19:03.479">Test contains no keywords.</status>
</test>
<doc>Arquivo de Testes para o endpoint /usuarios</doc>
<status status="FAIL" starttime="20220706 17:19:02.884" endtime="20220706 17:19:03.479"/>
</suite>
<statistics>
<total>
<stat pass="26" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">DELETE</stat>
<stat pass="1" fail="0" skip="0">DELETE_id_invalido</stat>
<stat pass="1" fail="0" skip="0">DELETE_usuario</stat>
<stat pass="3" fail="0" skip="0">GET</stat>
<stat pass="1" fail="0" skip="0">GET_usuario_id</stat>
<stat pass="1" fail="0" skip="0">GET_usuario_id_invalido</stat>
<stat pass="1" fail="0" skip="0">GET_usuarios</stat>
<stat pass="8" fail="0" skip="0">POST</stat>
<stat pass="1" fail="0" skip="0">POST_cadastrar_dinamico</stat>
<stat pass="1" fail="0" skip="0">POST_criar_estatico</stat>
<stat pass="1" fail="0" skip="0">POST_usuario_adm_invalido</stat>
<stat pass="1" fail="0" skip="0">POST_usuario_email_usado</stat>
<stat pass="1" fail="0" skip="0">POST_usuario_invalido</stat>
<stat pass="1" fail="0" skip="0">POST_usuario_sem_email</stat>
<stat pass="1" fail="0" skip="0">POST_usuario_sem_nome</stat>
<stat pass="1" fail="0" skip="0">POST_usuario_sem_senha</stat>
<stat pass="11" fail="0" skip="0">PUT</stat>
<stat pass="1" fail="0" skip="0">PUT_adm_invalido</stat>
<stat pass="1" fail="0" skip="0">PUT_atualizar_adm_false</stat>
<stat pass="1" fail="0" skip="0">PUT_atualizar_adm_true</stat>
<stat pass="1" fail="0" skip="0">PUT_atualizar_email</stat>
<stat pass="1" fail="0" skip="0">PUT_atualizar_nome</stat>
<stat pass="1" fail="0" skip="0">PUT_atualizar_senha</stat>
<stat pass="1" fail="0" skip="0">PUT_criar_usuario</stat>
<stat pass="1" fail="0" skip="0">PUT_dados_invalidos PUT</stat>
<stat pass="1" fail="0" skip="0">PUT_editar_todos_dados</stat>
<stat pass="1" fail="0" skip="0">PUT_email_usado PUT</stat>
<stat pass="1" fail="0" skip="0">PUT_sem_email</stat>
<stat pass="1" fail="0" skip="0">PUT_sem_nome</stat>
<stat pass="1" fail="0" skip="0">PUT_sem_senha</stat>
</tag>
<suite>
<stat pass="26" fail="1" skip="0" id="s1" name="Usuarios Tests">Usuarios Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
